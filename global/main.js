var a1=(x,z)=>()=>(z||x((z={exports:{}}).exports,z),z.exports);import r1 from"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.9/contrib/auto-render.mjs";var t1=a1((M1,c0)=>{/*!
  Highlight.js v11.9.0 (git: f47103d4f1)
  (c) 2006-2023 undefined and other contributors
  License: BSD-3-Clause
 */var $0=function(){function x(Q){return Q instanceof Map?Q.clear=Q.delete=Q.set=()=>{throw Error("map is read-only")}:Q instanceof Set&&(Q.add=Q.clear=Q.delete=()=>{throw Error("set is read-only")}),Object.freeze(Q),Object.getOwnPropertyNames(Q).forEach((W)=>{const V=Q[W],Y=typeof V;Y!=="object"&&Y!=="function"||Object.isFrozen(V)||x(V)}),Q}class z{constructor(Q){Q.data===void 0&&(Q.data={}),this.data=Q.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}function d(Q){return Q.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function A(Q,...W){const V=Object.create(null);for(let Y in Q)V[Y]=Q[Y];return W.forEach((Y)=>{for(let Z in Y)V[Z]=Y[Z]}),V}const B0=(Q)=>!!Q.scope;class Y0{constructor(Q,W){this.buffer="",this.classPrefix=W.classPrefix,Q.walk(this)}addText(Q){this.buffer+=d(Q)}openNode(Q){if(!B0(Q))return;const W=((V,{prefix:Y})=>{if(V.startsWith("language:"))return V.replace("language:","language-");if(V.includes(".")){const Z=V.split(".");return[`${Y}${Z.shift()}`,...Z.map((X,P)=>`${X}${"_".repeat(P+1)}`)].join(" ")}return`${Y}${V}`})(Q.scope,{prefix:this.classPrefix});this.span(W)}closeNode(Q){B0(Q)&&(this.buffer+="</span>")}value(){return this.buffer}span(Q){this.buffer+=`<span class="${Q}">`}}const n=(Q={})=>{const W={children:[]};return Object.assign(W,Q),W};class o{constructor(){this.rootNode=n(),this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(Q){this.top.children.push(Q)}openNode(Q){const W=n({scope:Q});this.add(W),this.stack.push(W)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(Q){return this.constructor._walk(Q,this.rootNode)}static _walk(Q,W){return typeof W=="string"?Q.addText(W):W.children&&(Q.openNode(W),W.children.forEach((V)=>this._walk(Q,V)),Q.closeNode(W)),Q}static _collapse(Q){typeof Q!="string"&&Q.children&&(Q.children.every((W)=>typeof W=="string")?Q.children=[Q.children.join("")]:Q.children.forEach((W)=>{o._collapse(W)}))}}class s extends o{constructor(Q){super(),this.options=Q}addText(Q){Q!==""&&this.add(Q)}startScope(Q){this.openNode(Q)}endScope(){this.closeNode()}__addSublanguage(Q,W){const V=Q.root;W&&(V.scope="language:"+W),this.add(V)}toHTML(){return new Y0(this,this.options).value()}finalize(){return this.closeAllNodes(),!0}}function i(Q){return Q?typeof Q=="string"?Q:Q.source:null}function c(Q){return U("(?=",Q,")")}function I0(Q){return U("(?:",Q,")*")}function Z0(Q){return U("(?:",Q,")?")}function U(...Q){return Q.map((W)=>i(W)).join("")}function w(...Q){return"("+(((V)=>{const Y=V[V.length-1];return typeof Y=="object"&&Y.constructor===Object?(V.splice(V.length-1,1),Y):{}})(Q).capture?"":"?:")+Q.map((V)=>i(V)).join("|")+")"}function W0(Q){return RegExp(Q.toString()+"|").exec("").length-1}const U0=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;function D0(Q,{joinWith:W}){let V=0;return Q.map((Y)=>{V+=1;const Z=V;let X=i(Y),P="";for(;X.length>0;){const J=U0.exec(X);if(!J){P+=X;break}P+=X.substring(0,J.index),X=X.substring(J.index+J[0].length),J[0][0]==="\\"&&J[1]?P+="\\"+(Number(J[1])+Z):(P+=J[0],J[0]==="("&&V++)}return P}).map((Y)=>`(${Y})`).join(W)}const o0="[a-zA-Z]\\w*",_0="[a-zA-Z_]\\w*",s0="\\b\\d+(\\.\\d+)?",i0="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",a0="\\b(0b[01]+)",K0={begin:"\\\\[\\s\\S]",relevance:0},N1={scope:"string",begin:"'",end:"'",illegal:"\\n",contains:[K0]},O1={scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[K0]},F0=(Q,W,V={})=>{const Y=A({scope:"comment",begin:Q,end:W,contains:[]},V);Y.contains.push({scope:"doctag",begin:"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0});const Z=w("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/);return Y.contains.push({begin:U(/[ ]+/,"(",Z,/[.]?[:]?([.][ ]|[ ])/,"){3}")}),Y},T1=F0("//","$"),E1=F0("/\\*","\\*/"),y1=F0("#","$");var k0=Object.freeze({__proto__:null,APOS_STRING_MODE:N1,BACKSLASH_ESCAPE:K0,BINARY_NUMBER_MODE:{scope:"number",begin:a0,relevance:0},BINARY_NUMBER_RE:a0,COMMENT:F0,C_BLOCK_COMMENT_MODE:E1,C_LINE_COMMENT_MODE:T1,C_NUMBER_MODE:{scope:"number",begin:i0,relevance:0},C_NUMBER_RE:i0,END_SAME_AS_BEGIN:(Q)=>Object.assign(Q,{"on:begin":(W,V)=>{V.data._beginMatch=W[1]},"on:end":(W,V)=>{V.data._beginMatch!==W[1]&&V.ignoreMatch()}}),HASH_COMMENT_MODE:y1,IDENT_RE:o0,MATCH_NOTHING_RE:/\b\B/,METHOD_GUARD:{begin:"\\.\\s*"+_0,relevance:0},NUMBER_MODE:{scope:"number",begin:s0,relevance:0},NUMBER_RE:s0,PHRASAL_WORDS_MODE:{begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},QUOTE_STRING_MODE:O1,REGEXP_MODE:{scope:"regexp",begin:/\/(?=[^/\n]*\/)/,end:/\/[gimuy]*/,contains:[K0,{begin:/\[/,end:/\]/,relevance:0,contains:[K0]}]},RE_STARTERS_RE:"!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",SHEBANG:(Q={})=>{const W=/^#![ ]*\//;return Q.binary&&(Q.begin=U(W,/.*\b/,Q.binary,/\b.*/)),A({scope:"meta",begin:W,end:/$/,relevance:0,"on:begin":(V,Y)=>{V.index!==0&&Y.ignoreMatch()}},Q)},TITLE_MODE:{scope:"title",begin:o0,relevance:0},UNDERSCORE_IDENT_RE:_0,UNDERSCORE_TITLE_MODE:{scope:"title",begin:_0,relevance:0}});function C1(Q,W){Q.input[Q.index-1]==="."&&W.ignoreMatch()}function _1(Q,W){Q.className!==void 0&&(Q.scope=Q.className,delete Q.className)}function v1(Q,W){W&&Q.beginKeywords&&(Q.begin="\\b("+Q.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",Q.__beforeBegin=C1,Q.keywords=Q.keywords||Q.beginKeywords,delete Q.beginKeywords,Q.relevance===void 0&&(Q.relevance=0))}function S1(Q,W){Array.isArray(Q.illegal)&&(Q.illegal=w(...Q.illegal))}function f1(Q,W){if(Q.match){if(Q.begin||Q.end)throw Error("begin & end are not supported with match");Q.begin=Q.match,delete Q.match}}function w1(Q,W){Q.relevance===void 0&&(Q.relevance=1)}const h1=(Q,W)=>{if(!Q.beforeMatch)return;if(Q.starts)throw Error("beforeMatch cannot be used with starts");const V=Object.assign({},Q);Object.keys(Q).forEach((Y)=>{delete Q[Y]}),Q.keywords=V.keywords,Q.begin=U(V.beforeMatch,c(V.begin)),Q.starts={relevance:0,contains:[Object.assign(V,{endsParent:!0})]},Q.relevance=0,delete V.beforeMatch},A1=["of","and","for","in","not","or","if","then","parent","list","value"],g1="keyword";function r0(Q,W,V=g1){const Y=Object.create(null);return typeof Q=="string"?Z(V,Q.split(" ")):Array.isArray(Q)?Z(V,Q):Object.keys(Q).forEach((X)=>{Object.assign(Y,r0(Q[X],W,X))}),Y;function Z(X,P){W&&(P=P.map((J)=>J.toLowerCase())),P.forEach((J)=>{const G=J.split("|");Y[G[0]]=[X,p1(G[0],G[1])]})}}function p1(Q,W){return W?Number(W):((V)=>A1.includes(V.toLowerCase()))(Q)?0:1}const t0={},J0=(Q)=>{console.error(Q)},n0=(Q,...W)=>{console.log("WARN: "+Q,...W)},L0=(Q,W)=>{t0[`${Q}/${W}`]||(console.log(`Deprecated as of ${Q}. ${W}`),t0[`${Q}/${W}`]=!0)},R0=Error();function e0(Q,W,{key:V}){let Y=0;const Z=Q[V],X={},P={};for(let J=1;J<=W.length;J++)P[J+Y]=Z[J],X[J+Y]=!0,Y+=W0(W[J-1]);Q[V]=P,Q[V]._emit=X,Q[V]._multi=!0}function d1(Q){((W)=>{W.scope&&typeof W.scope=="object"&&W.scope!==null&&(W.beginScope=W.scope,delete W.scope)})(Q),typeof Q.beginScope=="string"&&(Q.beginScope={_wrap:Q.beginScope}),typeof Q.endScope=="string"&&(Q.endScope={_wrap:Q.endScope}),((W)=>{if(Array.isArray(W.begin)){if(W.skip||W.excludeBegin||W.returnBegin)throw J0("skip, excludeBegin, returnBegin not compatible with beginScope: {}"),R0;if(typeof W.beginScope!="object"||W.beginScope===null)throw J0("beginScope must be object"),R0;e0(W,W.begin,{key:"beginScope"}),W.begin=D0(W.begin,{joinWith:""})}})(Q),((W)=>{if(Array.isArray(W.end)){if(W.skip||W.excludeEnd||W.returnEnd)throw J0("skip, excludeEnd, returnEnd not compatible with endScope: {}"),R0;if(typeof W.endScope!="object"||W.endScope===null)throw J0("endScope must be object"),R0;e0(W,W.end,{key:"endScope"}),W.end=D0(W.end,{joinWith:""})}})(Q)}function m1(Q){function W(Z,X){return RegExp(i(Z),"m"+(Q.case_insensitive?"i":"")+(Q.unicodeRegex?"u":"")+(X?"g":""))}class V{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(Z,X){X.position=this.position++,this.matchIndexes[this.matchAt]=X,this.regexes.push([X,Z]),this.matchAt+=W0(Z)+1}compile(){this.regexes.length===0&&(this.exec=()=>null);const Z=this.regexes.map((X)=>X[1]);this.matcherRe=W(D0(Z,{joinWith:"|"}),!0),this.lastIndex=0}exec(Z){this.matcherRe.lastIndex=this.lastIndex;const X=this.matcherRe.exec(Z);if(!X)return null;const P=X.findIndex((G,H)=>H>0&&G!==void 0),J=this.matchIndexes[P];return X.splice(0,P),Object.assign(X,J)}}class Y{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(Z){if(this.multiRegexes[Z])return this.multiRegexes[Z];const X=new V;return this.rules.slice(Z).forEach(([P,J])=>X.addRule(P,J)),X.compile(),this.multiRegexes[Z]=X,X}resumingScanAtSamePosition(){return this.regexIndex!==0}considerAll(){this.regexIndex=0}addRule(Z,X){this.rules.push([Z,X]),X.type==="begin"&&this.count++}exec(Z){const X=this.getMatcher(this.regexIndex);X.lastIndex=this.lastIndex;let P=X.exec(Z);if(this.resumingScanAtSamePosition())if(P&&P.index===this.lastIndex);else{const J=this.getMatcher(0);J.lastIndex=this.lastIndex+1,P=J.exec(Z)}return P&&(this.regexIndex+=P.position+1,this.regexIndex===this.count&&this.considerAll()),P}}if(Q.compilerExtensions||(Q.compilerExtensions=[]),Q.contains&&Q.contains.includes("self"))throw Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return Q.classNameAliases=A(Q.classNameAliases||{}),function Z(X,P){const J=X;if(X.isCompiled)return J;[_1,f1,d1,h1].forEach((H)=>H(X,P)),Q.compilerExtensions.forEach((H)=>H(X,P)),X.__beforeBegin=null,[v1,S1,w1].forEach((H)=>H(X,P)),X.isCompiled=!0;let G=null;return typeof X.keywords=="object"&&X.keywords.$pattern&&(X.keywords=Object.assign({},X.keywords),G=X.keywords.$pattern,delete X.keywords.$pattern),G=G||/\w+/,X.keywords&&(X.keywords=r0(X.keywords,Q.case_insensitive)),J.keywordPatternRe=W(G,!0),P&&(X.begin||(X.begin=/\B|\b/),J.beginRe=W(J.begin),X.end||X.endsWithParent||(X.end=/\B|\b/),X.end&&(J.endRe=W(J.end)),J.terminatorEnd=i(J.end)||"",X.endsWithParent&&P.terminatorEnd&&(J.terminatorEnd+=(X.end?"|":"")+P.terminatorEnd)),X.illegal&&(J.illegalRe=W(X.illegal)),X.contains||(X.contains=[]),X.contains=[].concat(...X.contains.map((H)=>((L)=>(L.variants&&!L.cachedVariants&&(L.cachedVariants=L.variants.map((D)=>A(L,{variants:null},D))),L.cachedVariants?L.cachedVariants:Q1(L)?A(L,{starts:L.starts?A(L.starts):null}):Object.isFrozen(L)?A(L):L))(H==="self"?X:H))),X.contains.forEach((H)=>{Z(H,J)}),X.starts&&Z(X.starts,P),J.matcher=((H)=>{const L=new Y;return H.contains.forEach((D)=>L.addRule(D.begin,{rule:D,type:"begin"})),H.terminatorEnd&&L.addRule(H.terminatorEnd,{type:"end"}),H.illegal&&L.addRule(H.illegal,{type:"illegal"}),L})(J),J}(Q)}function Q1(Q){return!!Q&&(Q.endsWithParent||Q1(Q.starts))}class W1 extends Error{constructor(Q,W){super(Q),this.name="HTMLInjectionError",this.html=W}}const v0=d,V1=A,X1=Symbol("nomatch"),Y1=(Q)=>{const W=Object.create(null),V=Object.create(null),Y=[];let Z=!0;const X="Could not find the language '{}', did you forget to load/include a language module?",P={disableAutodetect:!0,name:"Plain text",contains:[]};let J={ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",cssSelector:"pre code",languages:null,__emitter:s};function G($){return J.noHighlightRe.test($)}function H($,B,F){let S="",N="";typeof B=="object"?(S=$,F=B.ignoreIllegals,N=B.language):(L0("10.7.0","highlight(lang, code, ...args) has been deprecated."),L0("10.7.0","Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277"),N=$,S=B),F===void 0&&(F=!0);const R={code:S,language:N};h("before:highlight",R);const E=R.result?R.result:L(R.language,R.code,F);return E.code=R.code,h("after:highlight",E),E}function L($,B,F,S){const N=Object.create(null);function R(){if(!k.keywords)return void p.addText(T);let q=0;k.keywordPatternRe.lastIndex=0;let K=k.keywordPatternRe.exec(T),v="";for(;K;){v+=T.substring(q,K.index);const f=l.case_insensitive?K[0].toLowerCase():K[0],b=(C=f,k.keywords[C]);if(b){const[Q0,x0]=b;if(p.addText(v),v="",N[f]=(N[f]||0)+1,N[f]<=7&&(z0+=x0),Q0.startsWith("_"))v+=K[0];else{const C0=l.classNameAliases[Q0]||Q0;m(K[0],C0)}}else v+=K[0];q=k.keywordPatternRe.lastIndex,K=k.keywordPatternRe.exec(T)}var C;v+=T.substring(q),p.addText(v)}function E(){k.subLanguage!=null?(()=>{if(T==="")return;let q=null;if(typeof k.subLanguage=="string"){if(!W[k.subLanguage])return void p.addText(T);q=L(k.subLanguage,T,!0,y[k.subLanguage]),y[k.subLanguage]=q._top}else q=D(T,k.subLanguage.length?k.subLanguage:null);k.relevance>0&&(z0+=q.relevance),p.__addSublanguage(q._emitter,q.language)})():R(),T=""}function m(q,K){q!==""&&(p.startScope(K),p.addText(q),p.endScope())}function _(q,K){let v=1;const C=K.length-1;for(;v<=C;){if(!q._emit[v]){v++;continue}const f=l.classNameAliases[q[v]]||q[v],b=K[v];f?m(b,f):(T=b,R(),T=""),v++}}function g(q,K){return q.scope&&typeof q.scope=="string"&&p.openNode(l.classNameAliases[q.scope]||q.scope),q.beginScope&&(q.beginScope._wrap?(m(T,l.classNameAliases[q.beginScope._wrap]||q.beginScope._wrap),T=""):q.beginScope._multi&&(_(q.beginScope,K),T="")),k=Object.create(q,{parent:{value:k}}),k}function a(q,K,v){let C=((f,b)=>{const Q0=f&&f.exec(b);return Q0&&Q0.index===0})(q.endRe,v);if(C){if(q["on:end"]){const f=new z(q);q["on:end"](K,f),f.isMatchIgnored&&(C=!1)}if(C){for(;q.endsParent&&q.parent;)q=q.parent;return q}}if(q.endsWithParent)return a(q.parent,K,v)}function P0(q){return k.matcher.regexIndex===0?(T+=q[0],1):(b0=!0,0)}function V0(q){const K=q[0],v=B.substring(q.index),C=a(k,q,v);if(!C)return X1;const f=k;k.endScope&&k.endScope._wrap?(E(),m(K,k.endScope._wrap)):k.endScope&&k.endScope._multi?(E(),_(k.endScope,q)):f.skip?T+=K:(f.returnEnd||f.excludeEnd||(T+=K),E(),f.excludeEnd&&(T=K));do k.scope&&p.closeNode(),k.skip||k.subLanguage||(z0+=k.relevance),k=k.parent;while(k!==C.parent);return C.starts&&g(C.starts,q),f.returnEnd?0:K.length}let t={};function X0(q,K){const v=K&&K[0];if(T+=q,v==null)return E(),0;if(t.type==="begin"&&K.type==="end"&&t.index===K.index&&v===""){if(T+=B.slice(K.index,K.index+1),!Z){const C=Error(`0 width match regex (${$})`);throw C.languageName=$,C.badRule=t.rule,C}return 1}if(t=K,K.type==="begin")return((C)=>{const f=C[0],b=C.rule,Q0=new z(b),x0=[b.__beforeBegin,b["on:begin"]];for(let C0 of x0)if(C0&&(C0(C,Q0),Q0.isMatchIgnored))return P0(f);return b.skip?T+=f:(b.excludeBegin&&(T+=f),E(),b.returnBegin||b.excludeBegin||(T=f)),g(b,C),b.returnBegin?0:f.length})(K);if(K.type==="illegal"&&!F){const C=Error('Illegal lexeme "'+v+'" for mode "'+(k.scope||"<unnamed>")+'"');throw C.mode=k,C}if(K.type==="end"){const C=V0(K);if(C!==X1)return C}if(K.type==="illegal"&&v==="")return 1;if(u0>1e5&&u0>3*K.index)throw Error("potential infinite loop, way more iterations than matches");return T+=v,v.length}const l=O($);if(!l)throw J0(X.replace("{}",$)),Error('Unknown language: "'+$+'"');const j0=m1(l);let G0="",k=S||j0;const y={},p=new J.__emitter(J);(()=>{const q=[];for(let K=k;K!==l;K=K.parent)K.scope&&q.unshift(K.scope);q.forEach((K)=>p.openNode(K))})();let T="",z0=0,H0=0,u0=0,b0=!1;try{if(l.__emitTokens)l.__emitTokens(B,p);else{for(k.matcher.considerAll();;){u0++,b0?b0=!1:k.matcher.considerAll(),k.matcher.lastIndex=H0;const q=k.matcher.exec(B);if(!q)break;const K=X0(B.substring(H0,q.index),q);H0=q.index+K}X0(B.substring(H0))}return p.finalize(),G0=p.toHTML(),{language:$,value:G0,relevance:z0,illegal:!1,_emitter:p,_top:k}}catch(q){if(q.message&&q.message.includes("Illegal"))return{language:$,value:v0(B),illegal:!0,relevance:0,_illegalBy:{message:q.message,index:H0,context:B.slice(H0-100,H0+100),mode:q.mode,resultSoFar:G0},_emitter:p};if(Z)return{language:$,value:v0(B),illegal:!1,relevance:0,errorRaised:q,_emitter:p,_top:k};throw q}}function D($,B){B=B||J.languages||Object.keys(W);const F=((_)=>{const g={value:v0(_),illegal:!1,relevance:0,_top:P,_emitter:new J.__emitter(J)};return g._emitter.addText(_),g})($),S=B.filter(O).filter(r).map((_)=>L(_,$,!1));S.unshift(F);const N=S.sort((_,g)=>{if(_.relevance!==g.relevance)return g.relevance-_.relevance;if(_.language&&g.language){if(O(_.language).supersetOf===g.language)return 1;if(O(g.language).supersetOf===_.language)return-1}return 0}),[R,E]=N,m=R;return m.secondBest=E,m}function I($){let B=null;const F=((R)=>{let E=R.className+" ";E+=R.parentNode?R.parentNode.className:"";const m=J.languageDetectRe.exec(E);if(m){const _=O(m[1]);return _||(n0(X.replace("{}",m[1])),n0("Falling back to no-highlight mode for this block.",R)),_?m[1]:"no-highlight"}return E.split(/\s+/).find((_)=>G(_)||O(_))})($);if(G(F))return;if(h("before:highlightElement",{el:$,language:F}),$.dataset.highlighted)return void console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.",$);if($.children.length>0&&(J.ignoreUnescapedHTML||(console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."),console.warn("https://github.com/highlightjs/highlight.js/wiki/security"),console.warn("The element with unescaped HTML:"),console.warn($)),J.throwUnescapedHTML))throw new W1("One of your code blocks includes unescaped HTML.",$.innerHTML);B=$;const S=B.textContent,N=F?H(S,{language:F,ignoreIllegals:!0}):D(S);$.innerHTML=N.value,$.dataset.highlighted="yes",((R,E,m)=>{const _=E&&V[E]||m;R.classList.add("hljs"),R.classList.add("language-"+_)})($,F,N.language),$.result={language:N.language,re:N.relevance,relevance:N.relevance},N.secondBest&&($.secondBest={language:N.secondBest.language,relevance:N.secondBest.relevance}),h("after:highlightElement",{el:$,result:N,text:S})}let M=!1;function j(){document.readyState!=="loading"?document.querySelectorAll(J.cssSelector).forEach(I):M=!0}function O($){return $=($||"").toLowerCase(),W[$]||W[V[$]]}function u($,{languageName:B}){typeof $=="string"&&($=[$]),$.forEach((F)=>{V[F.toLowerCase()]=B})}function r($){const B=O($);return B&&!B.disableAutodetect}function h($,B){const F=$;Y.forEach((S)=>{S[F]&&S[F](B)})}typeof window!="undefined"&&window.addEventListener&&window.addEventListener("DOMContentLoaded",()=>{M&&j()},!1),Object.assign(Q,{highlight:H,highlightAuto:D,highlightAll:j,highlightElement:I,highlightBlock:($)=>(L0("10.7.0","highlightBlock will be removed entirely in v12.0"),L0("10.7.0","Please use highlightElement now."),I($)),configure:($)=>{J=V1(J,$)},initHighlighting:()=>{j(),L0("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")},initHighlightingOnLoad:()=>{j(),L0("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")},registerLanguage:($,B)=>{let F=null;try{F=B(Q)}catch(S){if(J0("Language definition for '{}' could not be registered.".replace("{}",$)),!Z)throw S;J0(S),F=P}F.name||(F.name=$),W[$]=F,F.rawDefinition=B.bind(null,Q),F.aliases&&u(F.aliases,{languageName:$})},unregisterLanguage:($)=>{delete W[$];for(let B of Object.keys(V))V[B]===$&&delete V[B]},listLanguages:()=>Object.keys(W),getLanguage:O,registerAliases:u,autoDetection:r,inherit:V1,addPlugin:($)=>{((B)=>{B["before:highlightBlock"]&&!B["before:highlightElement"]&&(B["before:highlightElement"]=(F)=>{B["before:highlightBlock"](Object.assign({block:F.el},F))}),B["after:highlightBlock"]&&!B["after:highlightElement"]&&(B["after:highlightElement"]=(F)=>{B["after:highlightBlock"](Object.assign({block:F.el},F))})})($),Y.push($)},removePlugin:($)=>{const B=Y.indexOf($);B!==-1&&Y.splice(B,1)}}),Q.debugMode=()=>{Z=!1},Q.safeMode=()=>{Z=!0},Q.versionString="11.9.0",Q.regex={concat:U,lookahead:c,either:w,optional:Z0,anyNumberOfTimes:I0};for(let $ in k0)typeof k0[$]=="object"&&x(k0[$]);return Object.assign(Q,k0),Q},Z1=Y1({});Z1.newInstance=()=>Y1({});var u1=Z1;const S0=(Q)=>({IMPORTANT:{scope:"meta",begin:"!important"},BLOCK_COMMENT:Q.C_BLOCK_COMMENT_MODE,HEXCOLOR:{scope:"number",begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/},FUNCTION_DISPATCH:{className:"built_in",begin:/[\w-]+(?=\()/},ATTRIBUTE_SELECTOR_MODE:{scope:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{scope:"number",begin:Q.NUMBER_RE+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},CSS_VARIABLE:{className:"attr",begin:/--[A-Za-z_][A-Za-z0-9_-]*/}}),f0=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","p","q","quote","samp","section","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"],w0=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"],M0=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"],N0=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"],h0=["align-content","align-items","align-self","all","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","backface-visibility","background","background-attachment","background-blend-mode","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","block-size","border","border-block","border-block-color","border-block-end","border-block-end-color","border-block-end-style","border-block-end-width","border-block-start","border-block-start-color","border-block-start-style","border-block-start-width","border-block-style","border-block-width","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-inline","border-inline-color","border-inline-end","border-inline-end-color","border-inline-end-style","border-inline-end-width","border-inline-start","border-inline-start-color","border-inline-start-style","border-inline-start-width","border-inline-style","border-inline-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","caret-color","clear","clip","clip-path","clip-rule","color","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","contain","content","content-visibility","counter-increment","counter-reset","cue","cue-after","cue-before","cursor","direction","display","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","flow","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-smoothing","font-stretch","font-style","font-synthesis","font-variant","font-variant-caps","font-variant-east-asian","font-variant-ligatures","font-variant-numeric","font-variant-position","font-variation-settings","font-weight","gap","glyph-orientation-vertical","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-start","grid-gap","grid-row","grid-row-end","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hanging-punctuation","height","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","inline-size","isolation","justify-content","left","letter-spacing","line-break","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-block","margin-block-end","margin-block-start","margin-bottom","margin-inline","margin-inline-end","margin-inline-start","margin-left","margin-right","margin-top","marks","mask","mask-border","mask-border-mode","mask-border-outset","mask-border-repeat","mask-border-slice","mask-border-source","mask-border-width","mask-clip","mask-composite","mask-image","mask-mode","mask-origin","mask-position","mask-repeat","mask-size","mask-type","max-block-size","max-height","max-inline-size","max-width","min-block-size","min-height","min-inline-size","min-width","mix-blend-mode","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-block","padding-block-end","padding-block-start","padding-bottom","padding-inline","padding-inline-end","padding-inline-start","padding-left","padding-right","padding-top","page-break-after","page-break-before","page-break-inside","pause","pause-after","pause-before","perspective","perspective-origin","pointer-events","position","quotes","resize","rest","rest-after","rest-before","right","row-gap","scroll-margin","scroll-margin-block","scroll-margin-block-end","scroll-margin-block-start","scroll-margin-bottom","scroll-margin-inline","scroll-margin-inline-end","scroll-margin-inline-start","scroll-margin-left","scroll-margin-right","scroll-margin-top","scroll-padding","scroll-padding-block","scroll-padding-block-end","scroll-padding-block-start","scroll-padding-bottom","scroll-padding-inline","scroll-padding-inline-end","scroll-padding-inline-start","scroll-padding-left","scroll-padding-right","scroll-padding-top","scroll-snap-align","scroll-snap-stop","scroll-snap-type","scrollbar-color","scrollbar-gutter","scrollbar-width","shape-image-threshold","shape-margin","shape-outside","speak","speak-as","src","tab-size","table-layout","text-align","text-align-all","text-align-last","text-combine-upright","text-decoration","text-decoration-color","text-decoration-line","text-decoration-style","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-indent","text-justify","text-orientation","text-overflow","text-rendering","text-shadow","text-transform","text-underline-position","top","transform","transform-box","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","white-space","widows","width","will-change","word-break","word-spacing","word-wrap","writing-mode","z-index"].reverse(),b1=M0.concat(N0);var q0="[0-9](_*[0-9])*",O0=`\\.(${q0})`,T0="[0-9a-fA-F](_*[0-9a-fA-F])*",A0={className:"number",variants:[{begin:`(\\b(${q0})((${O0})|\\.)?|(${O0}))[eE][+-]?(${q0})[fFdD]?\\b`},{begin:`\\b(${q0})((${O0})[fFdD]?\\b|\\.([fFdD]\\b)?)`},{begin:`(${O0})[fFdD]?\\b`},{begin:`\\b(${q0})[fFdD]\\b`},{begin:`\\b0[xX]((${T0})\\.?|(${T0})?\\.(${T0}))[pP][+-]?(${q0})[fFdD]?\\b`},{begin:"\\b(0|[1-9](_*[0-9])*)[lL]?\\b"},{begin:`\\b0[xX](${T0})[lL]?\\b`},{begin:"\\b0(_*[0-7])*[lL]?\\b"},{begin:"\\b0[bB][01](_*[01])*[lL]?\\b"}],relevance:0};function J1(Q,W,V){return V===-1?"":Q.replace(W,(Y)=>J1(Q,W,V-1))}const E0="[A-Za-z$_][0-9A-Za-z$_]*",P1=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],G1=["true","false","null","undefined","NaN","Infinity"],H1=["Object","Function","Boolean","Symbol","Math","Date","Number","BigInt","String","RegExp","Array","Float32Array","Float64Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array","Set","Map","WeakSet","WeakMap","ArrayBuffer","SharedArrayBuffer","Atomics","DataView","JSON","Promise","Generator","GeneratorFunction","AsyncFunction","Reflect","Proxy","Intl","WebAssembly"],$1=["Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"],L1=["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],q1=["arguments","this","super","console","window","document","localStorage","sessionStorage","module","global"],z1=[].concat(L1,H1,$1);function B1(Q){const W=Q.regex,V=E0,Y={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:(g,a)=>{const P0=g[0].length+g.index,V0=g.input[P0];if(V0==="<"||V0===",")return void a.ignoreMatch();let t;V0===">"&&(((l,{after:j0})=>{const G0="</"+l[0].slice(1);return l.input.indexOf(G0,j0)!==-1})(g,{after:P0})||a.ignoreMatch());const X0=g.input.substring(P0);((t=X0.match(/^\s*=/))||(t=X0.match(/^\s+extends\s+/))&&t.index===0)&&a.ignoreMatch()}},Z={$pattern:E0,keyword:P1,literal:G1,built_in:z1,"variable.language":q1},G={className:"number",variants:[{begin:"(\\b(0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*)((\\.([0-9](_?[0-9])*))|\\.)?|(\\.([0-9](_?[0-9])*)))[eE][+-]?([0-9](_?[0-9])*)\\b"},{begin:"\\b(0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*)\\b((\\.([0-9](_?[0-9])*))\\b|\\.)?|(\\.([0-9](_?[0-9])*))\\b"},{begin:"\\b(0|[1-9](_?[0-9])*)n\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0},H={className:"subst",begin:"\\$\\{",end:"\\}",keywords:Z,contains:[]},L={begin:"html`",end:"",starts:{end:"`",returnEnd:!1,contains:[Q.BACKSLASH_ESCAPE,H],subLanguage:"xml"}},D={begin:"css`",end:"",starts:{end:"`",returnEnd:!1,contains:[Q.BACKSLASH_ESCAPE,H],subLanguage:"css"}},I={begin:"gql`",end:"",starts:{end:"`",returnEnd:!1,contains:[Q.BACKSLASH_ESCAPE,H],subLanguage:"graphql"}},M={className:"string",begin:"`",end:"`",contains:[Q.BACKSLASH_ESCAPE,H]},j={className:"comment",variants:[Q.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{begin:"(?=@[A-Za-z]+)",relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+"},{className:"type",begin:"\\{",end:"\\}",excludeEnd:!0,excludeBegin:!0,relevance:0},{className:"variable",begin:V+"(?=\\s*(-)|$)",endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]}),Q.C_BLOCK_COMMENT_MODE,Q.C_LINE_COMMENT_MODE]},O=[Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE,L,D,I,M,{match:/\$\d+/},G];H.contains=O.concat({begin:/\{/,end:/\}/,keywords:Z,contains:["self"].concat(O)});const u=[].concat(j,H.contains),r=u.concat([{begin:/\(/,end:/\)/,keywords:Z,contains:["self"].concat(u)}]),h={className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:Z,contains:r},$={variants:[{match:[/class/,/\s+/,V,/\s+/,/extends/,/\s+/,W.concat(V,"(",W.concat(/\./,V),")*")],scope:{1:"keyword",3:"title.class",5:"keyword",7:"title.class.inherited"}},{match:[/class/,/\s+/,V],scope:{1:"keyword",3:"title.class"}}]},B={relevance:0,match:W.either(/\bJSON/,/\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,/\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,/\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/),className:"title.class",keywords:{_:[...H1,...$1]}},F={variants:[{match:[/function/,/\s+/,V,/(?=\s*\()/]},{match:[/function/,/\s*(?=\()/]}],className:{1:"keyword",3:"title.function"},label:"func.def",contains:[h],illegal:/%/},S={match:W.concat(/\b/,(N=[...L1,"super","import"],W.concat("(?!",N.join("|"),")")),V,W.lookahead(/\(/)),className:"title.function",relevance:0};var N;const R={begin:W.concat(/\./,W.lookahead(W.concat(V,/(?![0-9A-Za-z$_(])/))),end:V,excludeBegin:!0,keywords:"prototype",className:"property",relevance:0},E={match:[/get|set/,/\s+/,V,/(?=\()/],className:{1:"keyword",3:"title.function"},contains:[{begin:/\(\)/},h]},m="(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+Q.UNDERSCORE_IDENT_RE+")\\s*=>",_={match:[/const|var|let/,/\s+/,V,/\s*/,/=\s*/,/(async\s*)?/,W.lookahead(m)],keywords:"async",className:{1:"keyword",3:"title.function"},contains:[h]};return{name:"JavaScript",aliases:["js","jsx","mjs","cjs"],keywords:Z,exports:{PARAMS_CONTAINS:r,CLASS_REFERENCE:B},illegal:/#(?![$_A-z])/,contains:[Q.SHEBANG({label:"shebang",binary:"node",relevance:5}),{label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/},Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE,L,D,I,M,j,{match:/\$\d+/},G,B,{className:"attr",begin:V+W.lookahead(":"),relevance:0},_,{begin:"("+Q.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",relevance:0,contains:[j,Q.REGEXP_MODE,{className:"function",begin:m,returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:Q.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:Z,contains:r}]}]},{begin:/,/,relevance:0},{match:/\s+/,relevance:0},{variants:[{begin:"<>",end:"</>"},{match:/<[A-Za-z0-9\\._:-]+\s*\/>/},{begin:Y.begin,"on:begin":Y.isTrulyOpeningTag,end:Y.end}],subLanguage:"xml",contains:[{begin:Y.begin,end:Y.end,skip:!0,contains:["self"]}]}]},F,{beginKeywords:"while if switch catch for"},{begin:"\\b(?!function)"+Q.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:!0,label:"func.def",contains:[h,Q.inherit(Q.TITLE_MODE,{begin:V,className:"title.function"})]},{match:/\.\.\./,relevance:0},R,{match:"\\$"+V,relevance:0},{match:[/\bconstructor(?=\s*\()/],className:{1:"title.function"},contains:[h]},S,{relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"},$,E,{match:/\$[(.]/}]}}const g0=(Q)=>U(/\b/,Q,/\w$/.test(Q)?/\b/:/\B/),x1=["Protocol","Type"].map(g0),I1=["init","self"].map(g0),c1=["Any","Self"],p0=["actor","any","associatedtype","async","await",/as\?/,/as!/,"as","borrowing","break","case","catch","class","consume","consuming","continue","convenience","copy","default","defer","deinit","didSet","distributed","do","dynamic","each","else","enum","extension","fallthrough",/fileprivate\(set\)/,"fileprivate","final","for","func","get","guard","if","import","indirect","infix",/init\?/,/init!/,"inout",/internal\(set\)/,"internal","in","is","isolated","nonisolated","lazy","let","macro","mutating","nonmutating",/open\(set\)/,"open","operator","optional","override","postfix","precedencegroup","prefix",/private\(set\)/,"private","protocol",/public\(set\)/,"public","repeat","required","rethrows","return","set","some","static","struct","subscript","super","switch","throws","throw",/try\?/,/try!/,"try","typealias",/unowned\(safe\)/,/unowned\(unsafe\)/,"unowned","var","weak","where","while","willSet"],U1=["false","nil","true"],l1=["assignment","associativity","higherThan","left","lowerThan","none","right"],o1=["#colorLiteral","#column","#dsohandle","#else","#elseif","#endif","#error","#file","#fileID","#fileLiteral","#filePath","#function","#if","#imageLiteral","#keyPath","#line","#selector","#sourceLocation","#warning"],D1=["abs","all","any","assert","assertionFailure","debugPrint","dump","fatalError","getVaList","isKnownUniquelyReferenced","max","min","numericCast","pointwiseMax","pointwiseMin","precondition","preconditionFailure","print","readLine","repeatElement","sequence","stride","swap","swift_unboxFromSwiftValueWithType","transcode","type","unsafeBitCast","unsafeDowncast","withExtendedLifetime","withUnsafeMutablePointer","withUnsafePointer","withVaList","withoutActuallyEscaping","zip"],K1=w(/[/=\-+!*%<>&|^~?]/,/[\u00A1-\u00A7]/,/[\u00A9\u00AB]/,/[\u00AC\u00AE]/,/[\u00B0\u00B1]/,/[\u00B6\u00BB\u00BF\u00D7\u00F7]/,/[\u2016-\u2017]/,/[\u2020-\u2027]/,/[\u2030-\u203E]/,/[\u2041-\u2053]/,/[\u2055-\u205E]/,/[\u2190-\u23FF]/,/[\u2500-\u2775]/,/[\u2794-\u2BFF]/,/[\u2E00-\u2E7F]/,/[\u3001-\u3003]/,/[\u3008-\u3020]/,/[\u3030]/),j1=w(K1,/[\u0300-\u036F]/,/[\u1DC0-\u1DFF]/,/[\u20D0-\u20FF]/,/[\uFE00-\uFE0F]/,/[\uFE20-\uFE2F]/),d0=U(K1,j1,"*"),F1=w(/[a-zA-Z_]/,/[\u00A8\u00AA\u00AD\u00AF\u00B2-\u00B5\u00B7-\u00BA]/,/[\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]/,/[\u0100-\u02FF\u0370-\u167F\u1681-\u180D\u180F-\u1DBF]/,/[\u1E00-\u1FFF]/,/[\u200B-\u200D\u202A-\u202E\u203F-\u2040\u2054\u2060-\u206F]/,/[\u2070-\u20CF\u2100-\u218F\u2460-\u24FF\u2776-\u2793]/,/[\u2C00-\u2DFF\u2E80-\u2FFF]/,/[\u3004-\u3007\u3021-\u302F\u3031-\u303F\u3040-\uD7FF]/,/[\uF900-\uFD3D\uFD40-\uFDCF\uFDF0-\uFE1F\uFE30-\uFE44]/,/[\uFE47-\uFEFE\uFF00-\uFFFD]/),y0=w(F1,/\d/,/[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]/),e=U(F1,y0,"*"),m0=U(/[A-Z]/,y0,"*"),s1=["attached","autoclosure",U(/convention\(/,w("swift","block","c"),/\)/),"discardableResult","dynamicCallable","dynamicMemberLookup","escaping","freestanding","frozen","GKInspectable","IBAction","IBDesignable","IBInspectable","IBOutlet","IBSegueAction","inlinable","main","nonobjc","NSApplicationMain","NSCopying","NSManaged",U(/objc\(/,e,/\)/),"objc","objcMembers","propertyWrapper","requires_stored_property_inits","resultBuilder","Sendable","testable","UIApplicationMain","unchecked","unknown","usableFromInline","warn_unqualified_access"],i1=["iOS","iOSApplicationExtension","macOS","macOSApplicationExtension","macCatalyst","macCatalystApplicationExtension","watchOS","watchOSApplicationExtension","tvOS","tvOSApplicationExtension","swift"];var k1=Object.freeze({__proto__:null,grmr_bash:(Q)=>{const W=Q.regex,V={},Y={begin:/\$\{/,end:/\}/,contains:["self",{begin:/:-/,contains:[V]}]};Object.assign(V,{className:"variable",variants:[{begin:W.concat(/\$[\w\d#@][\w\d_]*/,"(?![\\w\\d])(?![$])")},Y]});const Z={className:"subst",begin:/\$\(/,end:/\)/,contains:[Q.BACKSLASH_ESCAPE]},X={begin:/<<-?\s*(?=\w+)/,starts:{contains:[Q.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,className:"string"})]}},P={className:"string",begin:/"/,end:/"/,contains:[Q.BACKSLASH_ESCAPE,V,Z]};Z.contains.push(P);const J={begin:/\$?\(\(/,end:/\)\)/,contains:[{begin:/\d+#[0-9a-f]+/,className:"number"},Q.NUMBER_MODE,V]},G=Q.SHEBANG({binary:"(fish|bash|zsh|sh|csh|ksh|tcsh|dash|scsh)",relevance:10}),H={className:"function",begin:/\w[\w\d_]*\s*\(\s*\)\s*\{/,returnBegin:!0,contains:[Q.inherit(Q.TITLE_MODE,{begin:/\w[\w\d_]*/})],relevance:0};return{name:"Bash",aliases:["sh"],keywords:{$pattern:/\b[a-z][a-z0-9._-]+\b/,keyword:["if","then","else","elif","fi","for","while","until","in","do","done","case","esac","function","select"],literal:["true","false"],built_in:["break","cd","continue","eval","exec","exit","export","getopts","hash","pwd","readonly","return","shift","test","times","trap","umask","unset","alias","bind","builtin","caller","command","declare","echo","enable","help","let","local","logout","mapfile","printf","read","readarray","source","type","typeset","ulimit","unalias","set","shopt","autoload","bg","bindkey","bye","cap","chdir","clone","comparguments","compcall","compctl","compdescribe","compfiles","compgroups","compquote","comptags","comptry","compvalues","dirs","disable","disown","echotc","echoti","emulate","fc","fg","float","functions","getcap","getln","history","integer","jobs","kill","limit","log","noglob","popd","print","pushd","pushln","rehash","sched","setcap","setopt","stat","suspend","ttyctl","unfunction","unhash","unlimit","unsetopt","vared","wait","whence","where","which","zcompile","zformat","zftp","zle","zmodload","zparseopts","zprof","zpty","zregexparse","zsocket","zstyle","ztcp","chcon","chgrp","chown","chmod","cp","dd","df","dir","dircolors","ln","ls","mkdir","mkfifo","mknod","mktemp","mv","realpath","rm","rmdir","shred","sync","touch","truncate","vdir","b2sum","base32","base64","cat","cksum","comm","csplit","cut","expand","fmt","fold","head","join","md5sum","nl","numfmt","od","paste","ptx","pr","sha1sum","sha224sum","sha256sum","sha384sum","sha512sum","shuf","sort","split","sum","tac","tail","tr","tsort","unexpand","uniq","wc","arch","basename","chroot","date","dirname","du","echo","env","expr","factor","groups","hostid","id","link","logname","nice","nohup","nproc","pathchk","pinky","printenv","printf","pwd","readlink","runcon","seq","sleep","stat","stdbuf","stty","tee","test","timeout","tty","uname","unlink","uptime","users","who","whoami","yes"]},contains:[G,Q.SHEBANG(),H,J,Q.HASH_COMMENT_MODE,X,{match:/(\/[a-z._-]+)+/},P,{match:/\\"/},{className:"string",begin:/'/,end:/'/},{match:/\\'/},V]}},grmr_c:(Q)=>{const W=Q.regex,V=Q.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),X="(decltype\\(auto\\)|"+W.optional("[a-zA-Z_]\\w*::")+"[a-zA-Z_]\\w*"+W.optional("<[^<>]+>")+")",P={className:"type",variants:[{begin:"\\b[a-z\\d_]*_t\\b"},{match:/\batomic_[a-z]{3,6}\b/}]},J={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[Q.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},Q.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},G={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},H={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},Q.inherit(J,{className:"string"}),{className:"string",begin:/<.*?>/},V,Q.C_BLOCK_COMMENT_MODE]},L={className:"title",begin:W.optional("[a-zA-Z_]\\w*::")+Q.IDENT_RE,relevance:0},D=W.optional("[a-zA-Z_]\\w*::")+Q.IDENT_RE+"\\s*\\(",I={keyword:["asm","auto","break","case","continue","default","do","else","enum","extern","for","fortran","goto","if","inline","register","restrict","return","sizeof","struct","switch","typedef","union","volatile","while","_Alignas","_Alignof","_Atomic","_Generic","_Noreturn","_Static_assert","_Thread_local","alignas","alignof","noreturn","static_assert","thread_local","_Pragma"],type:["float","double","signed","unsigned","int","short","long","char","void","_Bool","_Complex","_Imaginary","_Decimal32","_Decimal64","_Decimal128","const","static","complex","bool","imaginary"],literal:"true false NULL",built_in:"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr"},M=[H,P,V,Q.C_BLOCK_COMMENT_MODE,G,J],j={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:I,contains:M.concat([{begin:/\(/,end:/\)/,keywords:I,contains:M.concat(["self"]),relevance:0}]),relevance:0},O={begin:"("+X+"[\\*&\\s]+)+"+D,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:I,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:"decltype\\(auto\\)",keywords:I,relevance:0},{begin:D,returnBegin:!0,contains:[Q.inherit(L,{className:"title.function"})],relevance:0},{relevance:0,match:/,/},{className:"params",begin:/\(/,end:/\)/,keywords:I,relevance:0,contains:[V,Q.C_BLOCK_COMMENT_MODE,J,G,P,{begin:/\(/,end:/\)/,keywords:I,relevance:0,contains:["self",V,Q.C_BLOCK_COMMENT_MODE,J,G,P]}]},P,V,Q.C_BLOCK_COMMENT_MODE,H]};return{name:"C",aliases:["h"],keywords:I,disableAutodetect:!0,illegal:"</",contains:[].concat(j,O,M,[H,{begin:Q.IDENT_RE+"::",keywords:I},{className:"class",beginKeywords:"enum class struct union",end:/[{;:<>=]/,contains:[{beginKeywords:"final class struct"},Q.TITLE_MODE]}]),exports:{preprocessor:H,strings:J,keywords:I}}},grmr_cpp:(Q)=>{const W=Q.regex,V=Q.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),X="(?!struct)(decltype\\(auto\\)|"+W.optional("[a-zA-Z_]\\w*::")+"[a-zA-Z_]\\w*"+W.optional("<[^<>]+>")+")",P={className:"type",begin:"\\b[a-z\\d_]*_t\\b"},J={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[Q.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},Q.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},G={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},H={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},Q.inherit(J,{className:"string"}),{className:"string",begin:/<.*?>/},V,Q.C_BLOCK_COMMENT_MODE]},L={className:"title",begin:W.optional("[a-zA-Z_]\\w*::")+Q.IDENT_RE,relevance:0},D=W.optional("[a-zA-Z_]\\w*::")+Q.IDENT_RE+"\\s*\\(",I={type:["bool","char","char16_t","char32_t","char8_t","double","float","int","long","short","void","wchar_t","unsigned","signed","const","static"],keyword:["alignas","alignof","and","and_eq","asm","atomic_cancel","atomic_commit","atomic_noexcept","auto","bitand","bitor","break","case","catch","class","co_await","co_return","co_yield","compl","concept","const_cast|10","consteval","constexpr","constinit","continue","decltype","default","delete","do","dynamic_cast|10","else","enum","explicit","export","extern","false","final","for","friend","goto","if","import","inline","module","mutable","namespace","new","noexcept","not","not_eq","nullptr","operator","or","or_eq","override","private","protected","public","reflexpr","register","reinterpret_cast|10","requires","return","sizeof","static_assert","static_cast|10","struct","switch","synchronized","template","this","thread_local","throw","transaction_safe","transaction_safe_dynamic","true","try","typedef","typeid","typename","union","using","virtual","volatile","while","xor","xor_eq"],literal:["NULL","false","nullopt","nullptr","true"],built_in:["_Pragma"],_type_hints:["any","auto_ptr","barrier","binary_semaphore","bitset","complex","condition_variable","condition_variable_any","counting_semaphore","deque","false_type","future","imaginary","initializer_list","istringstream","jthread","latch","lock_guard","multimap","multiset","mutex","optional","ostringstream","packaged_task","pair","promise","priority_queue","queue","recursive_mutex","recursive_timed_mutex","scoped_lock","set","shared_future","shared_lock","shared_mutex","shared_timed_mutex","shared_ptr","stack","string_view","stringstream","timed_mutex","thread","true_type","tuple","unique_lock","unique_ptr","unordered_map","unordered_multimap","unordered_multiset","unordered_set","variant","vector","weak_ptr","wstring","wstring_view"]},M={className:"function.dispatch",relevance:0,keywords:{_hint:["abort","abs","acos","apply","as_const","asin","atan","atan2","calloc","ceil","cerr","cin","clog","cos","cosh","cout","declval","endl","exchange","exit","exp","fabs","floor","fmod","forward","fprintf","fputs","free","frexp","fscanf","future","invoke","isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","labs","launder","ldexp","log","log10","make_pair","make_shared","make_shared_for_overwrite","make_tuple","make_unique","malloc","memchr","memcmp","memcpy","memset","modf","move","pow","printf","putchar","puts","realloc","scanf","sin","sinh","snprintf","sprintf","sqrt","sscanf","std","stderr","stdin","stdout","strcat","strchr","strcmp","strcpy","strcspn","strlen","strncat","strncmp","strncpy","strpbrk","strrchr","strspn","strstr","swap","tan","tanh","terminate","to_underlying","tolower","toupper","vfprintf","visit","vprintf","vsprintf"]},begin:W.concat(/\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!switch)/,/(?!while)/,Q.IDENT_RE,W.lookahead(/(<[^<>]+>|)\s*\(/))},j=[M,H,P,V,Q.C_BLOCK_COMMENT_MODE,G,J],O={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:I,contains:j.concat([{begin:/\(/,end:/\)/,keywords:I,contains:j.concat(["self"]),relevance:0}]),relevance:0},u={className:"function",begin:"("+X+"[\\*&\\s]+)+"+D,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:I,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:"decltype\\(auto\\)",keywords:I,relevance:0},{begin:D,returnBegin:!0,contains:[L],relevance:0},{begin:/::/,relevance:0},{begin:/:/,endsWithParent:!0,contains:[J,G]},{relevance:0,match:/,/},{className:"params",begin:/\(/,end:/\)/,keywords:I,relevance:0,contains:[V,Q.C_BLOCK_COMMENT_MODE,J,G,P,{begin:/\(/,end:/\)/,keywords:I,relevance:0,contains:["self",V,Q.C_BLOCK_COMMENT_MODE,J,G,P]}]},P,V,Q.C_BLOCK_COMMENT_MODE,H]};return{name:"C++",aliases:["cc","c++","h++","hpp","hh","hxx","cxx"],keywords:I,illegal:"</",classNameAliases:{"function.dispatch":"built_in"},contains:[].concat(O,u,M,j,[H,{begin:"\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\s*<(?!<)",end:">",keywords:I,contains:["self",P]},{begin:Q.IDENT_RE+"::",keywords:I},{match:[/\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/,/\s+/,/\w+/],className:{1:"keyword",3:"title.class"}}])}},grmr_csharp:(Q)=>{const W={keyword:["abstract","as","base","break","case","catch","class","const","continue","do","else","event","explicit","extern","finally","fixed","for","foreach","goto","if","implicit","in","interface","internal","is","lock","namespace","new","operator","out","override","params","private","protected","public","readonly","record","ref","return","scoped","sealed","sizeof","stackalloc","static","struct","switch","this","throw","try","typeof","unchecked","unsafe","using","virtual","void","volatile","while"].concat(["add","alias","and","ascending","async","await","by","descending","equals","from","get","global","group","init","into","join","let","nameof","not","notnull","on","or","orderby","partial","remove","select","set","unmanaged","value|0","var","when","where","with","yield"]),built_in:["bool","byte","char","decimal","delegate","double","dynamic","enum","float","int","long","nint","nuint","object","sbyte","short","string","ulong","uint","ushort"],literal:["default","false","null","true"]},V=Q.inherit(Q.TITLE_MODE,{begin:"[a-zA-Z](\\.?\\w)*"}),Y={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},Z={className:"string",begin:'@"',end:'"',contains:[{begin:'""'}]},X=Q.inherit(Z,{illegal:/\n/}),P={className:"subst",begin:/\{/,end:/\}/,keywords:W},J=Q.inherit(P,{illegal:/\n/}),G={className:"string",begin:/\$"/,end:'"',illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},Q.BACKSLASH_ESCAPE,J]},H={className:"string",begin:/\$@"/,end:'"',contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},P]},L=Q.inherit(H,{illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},J]});P.contains=[H,G,Z,Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE,Y,Q.C_BLOCK_COMMENT_MODE],J.contains=[L,G,X,Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE,Y,Q.inherit(Q.C_BLOCK_COMMENT_MODE,{illegal:/\n/})];const D={variants:[H,G,Z,Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE]},I={begin:"<",end:">",contains:[{beginKeywords:"in out"},V]},M=Q.IDENT_RE+"(<"+Q.IDENT_RE+"(\\s*,\\s*"+Q.IDENT_RE+")*>)?(\\[\\])?",j={begin:"@"+Q.IDENT_RE,relevance:0};return{name:"C#",aliases:["cs","c#"],keywords:W,illegal:/::/,contains:[Q.COMMENT("///","$",{returnBegin:!0,contains:[{className:"doctag",variants:[{begin:"///",relevance:0},{begin:"<!--|-->"},{begin:"</?",end:">"}]}]}),Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE,{className:"meta",begin:"#",end:"$",keywords:{keyword:"if else elif endif define undef warning error line region endregion pragma checksum"}},D,Y,{beginKeywords:"class interface",relevance:0,end:/[{;=]/,illegal:/[^\s:,]/,contains:[{beginKeywords:"where class"},V,I,Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE]},{beginKeywords:"namespace",relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[V,Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE]},{beginKeywords:"record",relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[V,I,Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE]},{className:"meta",begin:"^\\s*\\[(?=[\\w])",excludeBegin:!0,end:"\\]",excludeEnd:!0,contains:[{className:"string",begin:/"/,end:/"/}]},{beginKeywords:"new return throw await else",relevance:0},{className:"function",begin:"("+M+"\\s+)+"+Q.IDENT_RE+"\\s*(<[^=]+>\\s*)?\\(",returnBegin:!0,end:/\s*[{;=]/,excludeEnd:!0,keywords:W,contains:[{beginKeywords:"public private protected static internal protected abstract async extern override unsafe virtual new sealed partial",relevance:0},{begin:Q.IDENT_RE+"\\s*(<[^=]+>\\s*)?\\(",returnBegin:!0,contains:[Q.TITLE_MODE,I],relevance:0},{match:/\(\)/},{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:W,relevance:0,contains:[D,Y,Q.C_BLOCK_COMMENT_MODE]},Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE]},j]}},grmr_css:(Q)=>{const W=Q.regex,V=S0(Q),Y=[Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE];return{name:"CSS",case_insensitive:!0,illegal:/[=|'\$]/,keywords:{keyframePosition:"from to"},classNameAliases:{keyframePosition:"selector-tag"},contains:[V.BLOCK_COMMENT,{begin:/-(webkit|moz|ms|o)-(?=[a-z])/},V.CSS_NUMBER_MODE,{className:"selector-id",begin:/#[A-Za-z0-9_-]+/,relevance:0},{className:"selector-class",begin:"\\.[a-zA-Z-][a-zA-Z0-9_-]*",relevance:0},V.ATTRIBUTE_SELECTOR_MODE,{className:"selector-pseudo",variants:[{begin:":("+M0.join("|")+")"},{begin:":(:)?("+N0.join("|")+")"}]},V.CSS_VARIABLE,{className:"attribute",begin:"\\b("+h0.join("|")+")\\b"},{begin:/:/,end:/[;}{]/,contains:[V.BLOCK_COMMENT,V.HEXCOLOR,V.IMPORTANT,V.CSS_NUMBER_MODE,...Y,{begin:/(url|data-uri)\(/,end:/\)/,relevance:0,keywords:{built_in:"url data-uri"},contains:[...Y,{className:"string",begin:/[^)]/,endsWithParent:!0,excludeEnd:!0}]},V.FUNCTION_DISPATCH]},{begin:W.lookahead(/@/),end:"[{;]",relevance:0,illegal:/:/,contains:[{className:"keyword",begin:/@-?\w[\w]*(-\w+)*/},{begin:/\s/,endsWithParent:!0,excludeEnd:!0,relevance:0,keywords:{$pattern:/[a-z-]+/,keyword:"and or not only",attribute:w0.join(" ")},contains:[{begin:/[a-z-]+(?=:)/,className:"attribute"},...Y,V.CSS_NUMBER_MODE]}]},{className:"selector-tag",begin:"\\b("+f0.join("|")+")\\b"}]}},grmr_diff:(Q)=>{const W=Q.regex;return{name:"Diff",aliases:["patch"],contains:[{className:"meta",relevance:10,match:W.either(/^@@ +-\d+,\d+ +\+\d+,\d+ +@@/,/^\*\*\* +\d+,\d+ +\*\*\*\*$/,/^--- +\d+,\d+ +----$/)},{className:"comment",variants:[{begin:W.either(/Index: /,/^index/,/={3,}/,/^-{3}/,/^\*{3} /,/^\+{3}/,/^diff --git/),end:/$/},{match:/^\*{15}$/}]},{className:"addition",begin:/^\+/,end:/$/},{className:"deletion",begin:/^-/,end:/$/},{className:"addition",begin:/^!/,end:/$/}]}},grmr_go:(Q)=>{const W={keyword:["break","case","chan","const","continue","default","defer","else","fallthrough","for","func","go","goto","if","import","interface","map","package","range","return","select","struct","switch","type","var"],type:["bool","byte","complex64","complex128","error","float32","float64","int8","int16","int32","int64","string","uint8","uint16","uint32","uint64","int","uint","uintptr","rune"],literal:["true","false","iota","nil"],built_in:["append","cap","close","complex","copy","imag","len","make","new","panic","print","println","real","recover","delete"]};return{name:"Go",aliases:["golang"],keywords:W,illegal:"</",contains:[Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE,{className:"string",variants:[Q.QUOTE_STRING_MODE,Q.APOS_STRING_MODE,{begin:"`",end:"`"}]},{className:"number",variants:[{begin:Q.C_NUMBER_RE+"[i]",relevance:1},Q.C_NUMBER_MODE]},{begin:/:=/},{className:"function",beginKeywords:"func",end:"\\s*(\\{|$)",excludeEnd:!0,contains:[Q.TITLE_MODE,{className:"params",begin:/\(/,end:/\)/,endsParent:!0,keywords:W,illegal:/["']/}]}]}},grmr_graphql:(Q)=>{const W=Q.regex;return{name:"GraphQL",aliases:["gql"],case_insensitive:!0,disableAutodetect:!1,keywords:{keyword:["query","mutation","subscription","type","input","schema","directive","interface","union","scalar","fragment","enum","on"],literal:["true","false","null"]},contains:[Q.HASH_COMMENT_MODE,Q.QUOTE_STRING_MODE,Q.NUMBER_MODE,{scope:"punctuation",match:/[.]{3}/,relevance:0},{scope:"punctuation",begin:/[\!\(\)\:\=\[\]\{\|\}]{1}/,relevance:0},{scope:"variable",begin:/\$/,end:/\W/,excludeEnd:!0,relevance:0},{scope:"meta",match:/@\w+/,excludeEnd:!0},{scope:"symbol",begin:W.concat(/[_A-Za-z][_0-9A-Za-z]*/,W.lookahead(/\s*:/)),relevance:0}],illegal:[/[;<']/,/BEGIN/]}},grmr_ini:(Q)=>{const W=Q.regex,V={className:"number",relevance:0,variants:[{begin:/([+-]+)?[\d]+_[\d_]+/},{begin:Q.NUMBER_RE}]},Y=Q.COMMENT();Y.variants=[{begin:/;/,end:/$/},{begin:/#/,end:/$/}];const Z={className:"variable",variants:[{begin:/\$[\w\d"][\w\d_]*/},{begin:/\$\{(.*?)\}/}]},X={className:"literal",begin:/\bon|off|true|false|yes|no\b/},P={className:"string",contains:[Q.BACKSLASH_ESCAPE],variants:[{begin:"'''",end:"'''",relevance:10},{begin:'"""',end:'"""',relevance:10},{begin:'"',end:'"'},{begin:"'",end:"'"}]},J={begin:/\[/,end:/\]/,contains:[Y,X,Z,P,V,"self"],relevance:0},G=W.either(/[A-Za-z0-9_-]+/,/"(\\"|[^"])*"/,/'[^']*'/);return{name:"TOML, also INI",aliases:["toml"],case_insensitive:!0,illegal:/\S/,contains:[Y,{className:"section",begin:/\[+/,end:/\]+/},{begin:W.concat(G,"(\\s*\\.\\s*",G,")*",W.lookahead(/\s*=\s*[^#\s]/)),className:"attr",starts:{end:/$/,contains:[Y,J,X,Z,P,V]}}]}},grmr_java:(Q)=>{const W=Q.regex,Y="[\xC0-\u02B8a-zA-Z_$][\xC0-\u02B8a-zA-Z_$0-9]*"+J1("(?:<"+"[\xC0-\u02B8a-zA-Z_$][\xC0-\u02B8a-zA-Z_$0-9]*"+"~~~(?:\\s*,\\s*"+"[\xC0-\u02B8a-zA-Z_$][\xC0-\u02B8a-zA-Z_$0-9]*"+"~~~)*>)?",/~~~/g,2),Z={keyword:["synchronized","abstract","private","var","static","if","const ","for","while","strictfp","finally","protected","import","native","final","void","enum","else","break","transient","catch","instanceof","volatile","case","assert","package","default","public","try","switch","continue","throws","protected","public","private","module","requires","exports","do","sealed","yield","permits"],literal:["false","true","null"],type:["char","boolean","long","float","int","byte","short","double"],built_in:["super","this"]},X={className:"meta",begin:"@"+"[\xC0-\u02B8a-zA-Z_$][\xC0-\u02B8a-zA-Z_$0-9]*",contains:[{begin:/\(/,end:/\)/,contains:["self"]}]},P={className:"params",begin:/\(/,end:/\)/,keywords:Z,relevance:0,contains:[Q.C_BLOCK_COMMENT_MODE],endsParent:!0};return{name:"Java",aliases:["jsp"],keywords:Z,illegal:/<\/|#/,contains:[Q.COMMENT("/\\*\\*","\\*/",{relevance:0,contains:[{begin:/\w+@/,relevance:0},{className:"doctag",begin:"@[A-Za-z]+"}]}),{begin:/import java\.[a-z]+\./,keywords:"import",relevance:2},Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE,{begin:/"""/,end:/"""/,className:"string",contains:[Q.BACKSLASH_ESCAPE]},Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE,{match:[/\b(?:class|interface|enum|extends|implements|new)/,/\s+/,"[\xC0-\u02B8a-zA-Z_$][\xC0-\u02B8a-zA-Z_$0-9]*"],className:{1:"keyword",3:"title.class"}},{match:/non-sealed/,scope:"keyword"},{begin:[W.concat(/(?!else)/,"[\xC0-\u02B8a-zA-Z_$][\xC0-\u02B8a-zA-Z_$0-9]*"),/\s+/,"[\xC0-\u02B8a-zA-Z_$][\xC0-\u02B8a-zA-Z_$0-9]*",/\s+/,/=(?!=)/],className:{1:"type",3:"variable",5:"operator"}},{begin:[/record/,/\s+/,"[\xC0-\u02B8a-zA-Z_$][\xC0-\u02B8a-zA-Z_$0-9]*"],className:{1:"keyword",3:"title.class"},contains:[P,Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE]},{beginKeywords:"new throw return else",relevance:0},{begin:["(?:"+Y+"\\s+)",Q.UNDERSCORE_IDENT_RE,/\s*(?=\()/],className:{2:"title.function"},keywords:Z,contains:[{className:"params",begin:/\(/,end:/\)/,keywords:Z,relevance:0,contains:[X,Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE,A0,Q.C_BLOCK_COMMENT_MODE]},Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE]},A0,X]}},grmr_javascript:B1,grmr_json:(Q)=>{const W=["true","false","null"],V={scope:"literal",beginKeywords:W.join(" ")};return{name:"JSON",keywords:{literal:W},contains:[{className:"attr",begin:/"(\\.|[^\\"\r\n])*"(?=\s*:)/,relevance:1.01},{match:/[{}[\],:]/,className:"punctuation",relevance:0},Q.QUOTE_STRING_MODE,V,Q.C_NUMBER_MODE,Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE],illegal:"\\S"}},grmr_kotlin:(Q)=>{const W={keyword:"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual",built_in:"Byte Short Char Int Long Boolean Float Double Void Unit Nothing",literal:"true false null"},V={className:"symbol",begin:Q.UNDERSCORE_IDENT_RE+"@"},Y={className:"subst",begin:/\$\{/,end:/\}/,contains:[Q.C_NUMBER_MODE]},Z={className:"variable",begin:"\\$"+Q.UNDERSCORE_IDENT_RE},X={className:"string",variants:[{begin:'"""',end:'"""(?=[^"])',contains:[Z,Y]},{begin:"'",end:"'",illegal:/\n/,contains:[Q.BACKSLASH_ESCAPE]},{begin:'"',end:'"',illegal:/\n/,contains:[Q.BACKSLASH_ESCAPE,Z,Y]}]};Y.contains.push(X);const P={className:"meta",begin:"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*"+Q.UNDERSCORE_IDENT_RE+")?"},J={className:"meta",begin:"@"+Q.UNDERSCORE_IDENT_RE,contains:[{begin:/\(/,end:/\)/,contains:[Q.inherit(X,{className:"string"}),"self"]}]},G=A0,H=Q.COMMENT("/\\*","\\*/",{contains:[Q.C_BLOCK_COMMENT_MODE]}),L={variants:[{className:"type",begin:Q.UNDERSCORE_IDENT_RE},{begin:/\(/,end:/\)/,contains:[]}]},D=L;return D.variants[1].contains=[L],L.variants[1].contains=[D],{name:"Kotlin",aliases:["kt","kts"],keywords:W,contains:[Q.COMMENT("/\\*\\*","\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+"}]}),Q.C_LINE_COMMENT_MODE,H,{className:"keyword",begin:/\b(break|continue|return|this)\b/,starts:{contains:[{className:"symbol",begin:/@\w+/}]}},V,P,J,{className:"function",beginKeywords:"fun",end:"[(]|$",returnBegin:!0,excludeEnd:!0,keywords:W,relevance:5,contains:[{begin:Q.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:!0,relevance:0,contains:[Q.UNDERSCORE_TITLE_MODE]},{className:"type",begin:/</,end:/>/,keywords:"reified",relevance:0},{className:"params",begin:/\(/,end:/\)/,endsParent:!0,keywords:W,relevance:0,contains:[{begin:/:/,end:/[=,\/]/,endsWithParent:!0,contains:[L,Q.C_LINE_COMMENT_MODE,H],relevance:0},Q.C_LINE_COMMENT_MODE,H,P,J,X,Q.C_NUMBER_MODE]},H]},{begin:[/class|interface|trait/,/\s+/,Q.UNDERSCORE_IDENT_RE],beginScope:{3:"title.class"},keywords:"class interface trait",end:/[:\{(]|$/,excludeEnd:!0,illegal:"extends implements",contains:[{beginKeywords:"public protected internal private constructor"},Q.UNDERSCORE_TITLE_MODE,{className:"type",begin:/</,end:/>/,excludeBegin:!0,excludeEnd:!0,relevance:0},{className:"type",begin:/[,:]\s*/,end:/[<\(,){\s]|$/,excludeBegin:!0,returnEnd:!0},P,J]},X,{className:"meta",begin:"^#!/usr/bin/env",end:"$",illegal:"\n"},G]}},grmr_less:(Q)=>{const W=S0(Q),V=b1,Z="([\\w-]+|@\\{[\\w-]+\\})",X=[],P=[],J=(h)=>({className:"string",begin:"~?"+h+".*?"+h}),G=(h,$,B)=>({className:h,begin:$,relevance:B}),H={$pattern:/[a-z-]+/,keyword:"and or not only",attribute:w0.join(" ")},L={begin:"\\(",end:"\\)",contains:P,keywords:H,relevance:0};P.push(Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE,J("'"),J('"'),W.CSS_NUMBER_MODE,{begin:"(url|data-uri)\\(",starts:{className:"string",end:"[\\)\\n]",excludeEnd:!0}},W.HEXCOLOR,L,G("variable","@@?[\\w-]+",10),G("variable","@\\{[\\w-]+\\}"),G("built_in","~?`[^`]*?`"),{className:"attribute",begin:"[\\w-]+\\s*:",end:":",returnBegin:!0,excludeEnd:!0},W.IMPORTANT,{beginKeywords:"and not"},W.FUNCTION_DISPATCH);const D=P.concat({begin:/\{/,end:/\}/,contains:X}),I={beginKeywords:"when",endsWithParent:!0,contains:[{beginKeywords:"and not"}].concat(P)},M={begin:Z+"\\s*:",returnBegin:!0,end:/[;}]/,relevance:0,contains:[{begin:/-(webkit|moz|ms|o)-/},W.CSS_VARIABLE,{className:"attribute",begin:"\\b("+h0.join("|")+")\\b",end:/(?=:)/,starts:{endsWithParent:!0,illegal:"[<=$]",relevance:0,contains:P}}]},j={className:"keyword",begin:"@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b",starts:{end:"[;{}]",keywords:H,returnEnd:!0,contains:P,relevance:0}},O={className:"variable",variants:[{begin:"@[\\w-]+\\s*:",relevance:15},{begin:"@[\\w-]+"}],starts:{end:"[;}]",returnEnd:!0,contains:D}},u={variants:[{begin:"[\\.#:&\\[>]",end:"[;{}]"},{begin:Z,end:/\{/}],returnBegin:!0,returnEnd:!0,illegal:"[<='$\"]",relevance:0,contains:[Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE,I,G("keyword","all\\b"),G("variable","@\\{[\\w-]+\\}"),{begin:"\\b("+f0.join("|")+")\\b",className:"selector-tag"},W.CSS_NUMBER_MODE,G("selector-tag",Z,0),G("selector-id","#"+Z),G("selector-class","\\."+Z,0),G("selector-tag","&",0),W.ATTRIBUTE_SELECTOR_MODE,{className:"selector-pseudo",begin:":("+M0.join("|")+")"},{className:"selector-pseudo",begin:":(:)?("+N0.join("|")+")"},{begin:/\(/,end:/\)/,relevance:0,contains:D},{begin:"!important"},W.FUNCTION_DISPATCH]},r={begin:"[\\w-]+:(:)?"+`(${V.join("|")})`,returnBegin:!0,contains:[u]};return X.push(Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE,j,O,r,M,u,I,W.FUNCTION_DISPATCH),{name:"Less",case_insensitive:!0,illegal:"[=>'/<($\"]",contains:X}},grmr_lua:(Q)=>{const Y={begin:"\\[=*\\[",end:"\\]=*\\]",contains:["self"]},Z=[Q.COMMENT("--(?!\\[=*\\[)","$"),Q.COMMENT("--\\[=*\\[","\\]=*\\]",{contains:[Y],relevance:10})];return{name:"Lua",keywords:{$pattern:Q.UNDERSCORE_IDENT_RE,literal:"true false nil",keyword:"and break do else elseif end for goto if in local not or repeat return then until while",built_in:"_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove"},contains:Z.concat([{className:"function",beginKeywords:"function",end:"\\)",contains:[Q.inherit(Q.TITLE_MODE,{begin:"([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"}),{className:"params",begin:"\\(",endsWithParent:!0,contains:Z}].concat(Z)},Q.C_NUMBER_MODE,Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE,{className:"string",begin:"\\[=*\\[",end:"\\]=*\\]",contains:[Y],relevance:5}])}},grmr_makefile:(Q)=>{const W={className:"variable",variants:[{begin:"\\$\\("+Q.UNDERSCORE_IDENT_RE+"\\)",contains:[Q.BACKSLASH_ESCAPE]},{begin:/\$[@%<?\^\+\*]/}]},V={className:"string",begin:/"/,end:/"/,contains:[Q.BACKSLASH_ESCAPE,W]},Y={className:"variable",begin:/\$\([\w-]+\s/,end:/\)/,keywords:{built_in:"subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value"},contains:[W]},Z={begin:"^"+Q.UNDERSCORE_IDENT_RE+"\\s*(?=[:+?]?=)"},X={className:"section",begin:/^[^\s]+:/,end:/$/,contains:[W]};return{name:"Makefile",aliases:["mk","mak","make"],keywords:{$pattern:/[\w-]+/,keyword:"define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath"},contains:[Q.HASH_COMMENT_MODE,W,V,Y,Z,{className:"meta",begin:/^\.PHONY:/,end:/$/,keywords:{$pattern:/[\.\w]+/,keyword:".PHONY"}},X]}},grmr_markdown:(Q)=>{const W={begin:/<\/?[A-Za-z_]/,end:">",subLanguage:"xml",relevance:0},V={variants:[{begin:/\[.+?\]\[.*?\]/,relevance:0},{begin:/\[.+?\]\(((data|javascript|mailto):|(?:http|ftp)s?:\/\/).*?\)/,relevance:2},{begin:Q.regex.concat(/\[.+?\]\(/,/[A-Za-z][A-Za-z0-9+.-]*/,/:\/\/.*?\)/),relevance:2},{begin:/\[.+?\]\([./?&#].*?\)/,relevance:1},{begin:/\[.*?\]\(.*?\)/,relevance:0}],returnBegin:!0,contains:[{match:/\[(?=\])/},{className:"string",relevance:0,begin:"\\[",end:"\\]",excludeBegin:!0,returnEnd:!0},{className:"link",relevance:0,begin:"\\]\\(",end:"\\)",excludeBegin:!0,excludeEnd:!0},{className:"symbol",relevance:0,begin:"\\]\\[",end:"\\]",excludeBegin:!0,excludeEnd:!0}]},Y={className:"strong",contains:[],variants:[{begin:/_{2}(?!\s)/,end:/_{2}/},{begin:/\*{2}(?!\s)/,end:/\*{2}/}]},Z={className:"emphasis",contains:[],variants:[{begin:/\*(?![*\s])/,end:/\*/},{begin:/_(?![_\s])/,end:/_/,relevance:0}]},X=Q.inherit(Y,{contains:[]}),P=Q.inherit(Z,{contains:[]});Y.contains.push(P),Z.contains.push(X);let J=[W,V];return[Y,Z,X,P].forEach((G)=>{G.contains=G.contains.concat(J)}),J=J.concat(Y,Z),{name:"Markdown",aliases:["md","mkdown","mkd"],contains:[{className:"section",variants:[{begin:"^#{1,6}",end:"$",contains:J},{begin:"(?=^.+?\\n[=-]{2,}$)",contains:[{begin:"^[=-]*$"},{begin:"^",end:"\\n",contains:J}]}]},W,{className:"bullet",begin:"^[ \t]*([*+-]|(\\d+\\.))(?=\\s+)",end:"\\s+",excludeEnd:!0},Y,Z,{className:"quote",begin:"^>\\s+",contains:J,end:"$"},{className:"code",variants:[{begin:"(`{3,})[^`](.|\\n)*?\\1`*[ ]*"},{begin:"(~{3,})[^~](.|\\n)*?\\1~*[ ]*"},{begin:"```",end:"```+[ ]*$"},{begin:"~~~",end:"~~~+[ ]*$"},{begin:"`.+?`"},{begin:"(?=^( {4}|\\t))",contains:[{begin:"^( {4}|\\t)",end:"(\\n)$"}],relevance:0}]},{begin:"^[-\\*]{3,}",end:"$"},V,{begin:/^\[[^\n]+\]:/,returnBegin:!0,contains:[{className:"symbol",begin:/\[/,end:/\]/,excludeBegin:!0,excludeEnd:!0},{className:"link",begin:/:\s*/,end:/$/,excludeBegin:!0}]}]}},grmr_objectivec:(Q)=>{const W=/[a-zA-Z@][a-zA-Z0-9_]*/,V={$pattern:W,keyword:["@interface","@class","@protocol","@implementation"]};return{name:"Objective-C",aliases:["mm","objc","obj-c","obj-c++","objective-c++"],keywords:{"variable.language":["this","super"],$pattern:W,keyword:["while","export","sizeof","typedef","const","struct","for","union","volatile","static","mutable","if","do","return","goto","enum","else","break","extern","asm","case","default","register","explicit","typename","switch","continue","inline","readonly","assign","readwrite","self","@synchronized","id","typeof","nonatomic","IBOutlet","IBAction","strong","weak","copy","in","out","inout","bycopy","byref","oneway","__strong","__weak","__block","__autoreleasing","@private","@protected","@public","@try","@property","@end","@throw","@catch","@finally","@autoreleasepool","@synthesize","@dynamic","@selector","@optional","@required","@encode","@package","@import","@defs","@compatibility_alias","__bridge","__bridge_transfer","__bridge_retained","__bridge_retain","__covariant","__contravariant","__kindof","_Nonnull","_Nullable","_Null_unspecified","__FUNCTION__","__PRETTY_FUNCTION__","__attribute__","getter","setter","retain","unsafe_unretained","nonnull","nullable","null_unspecified","null_resettable","class","instancetype","NS_DESIGNATED_INITIALIZER","NS_UNAVAILABLE","NS_REQUIRES_SUPER","NS_RETURNS_INNER_POINTER","NS_INLINE","NS_AVAILABLE","NS_DEPRECATED","NS_ENUM","NS_OPTIONS","NS_SWIFT_UNAVAILABLE","NS_ASSUME_NONNULL_BEGIN","NS_ASSUME_NONNULL_END","NS_REFINED_FOR_SWIFT","NS_SWIFT_NAME","NS_SWIFT_NOTHROW","NS_DURING","NS_HANDLER","NS_ENDHANDLER","NS_VALUERETURN","NS_VOIDRETURN"],literal:["false","true","FALSE","TRUE","nil","YES","NO","NULL"],built_in:["dispatch_once_t","dispatch_queue_t","dispatch_sync","dispatch_async","dispatch_once"],type:["int","float","char","unsigned","signed","short","long","double","wchar_t","unichar","void","bool","BOOL","id|0","_Bool"]},illegal:"</",contains:[{className:"built_in",begin:"\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+"},Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE,Q.C_NUMBER_MODE,Q.QUOTE_STRING_MODE,Q.APOS_STRING_MODE,{className:"string",variants:[{begin:'@"',end:'"',illegal:"\\n",contains:[Q.BACKSLASH_ESCAPE]}]},{className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},Q.inherit(Q.QUOTE_STRING_MODE,{className:"string"}),{className:"string",begin:/<.*?>/,end:/$/,illegal:"\\n"},Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE]},{className:"class",begin:"("+V.keyword.join("|")+")\\b",end:/(\{|$)/,excludeEnd:!0,keywords:V,contains:[Q.UNDERSCORE_TITLE_MODE]},{begin:"\\."+Q.UNDERSCORE_IDENT_RE,relevance:0}]}},grmr_perl:(Q)=>{const W=Q.regex,V=/[dualxmsipngr]{0,12}/,Y={$pattern:/[\w.]+/,keyword:"abs accept alarm and atan2 bind binmode bless break caller chdir chmod chomp chop chown chr chroot close closedir connect continue cos crypt dbmclose dbmopen defined delete die do dump each else elsif endgrent endhostent endnetent endprotoent endpwent endservent eof eval exec exists exit exp fcntl fileno flock for foreach fork format formline getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername getpgrp getpriority getprotobyname getprotobynumber getprotoent getpwent getpwnam getpwuid getservbyname getservbyport getservent getsockname getsockopt given glob gmtime goto grep gt hex if index int ioctl join keys kill last lc lcfirst length link listen local localtime log lstat lt ma map mkdir msgctl msgget msgrcv msgsnd my ne next no not oct open opendir or ord our pack package pipe pop pos print printf prototype push q|0 qq quotemeta qw qx rand read readdir readline readlink readpipe recv redo ref rename require reset return reverse rewinddir rindex rmdir say scalar seek seekdir select semctl semget semop send setgrent sethostent setnetent setpgrp setpriority setprotoent setpwent setservent setsockopt shift shmctl shmget shmread shmwrite shutdown sin sleep socket socketpair sort splice split sprintf sqrt srand stat state study sub substr symlink syscall sysopen sysread sysseek system syswrite tell telldir tie tied time times tr truncate uc ucfirst umask undef unless unlink unpack unshift untie until use utime values vec wait waitpid wantarray warn when while write x|0 xor y|0"},Z={className:"subst",begin:"[$@]\\{",end:"\\}",keywords:Y},X={begin:/->\{/,end:/\}/},P={variants:[{begin:/\$\d/},{begin:W.concat(/[$%@](\^\w\b|#\w+(::\w+)*|\{\w+\}|\w+(::\w*)*)/,"(?![A-Za-z])(?![@$%])")},{begin:/[$%@][^\s\w{]/,relevance:0}]},J=[Q.BACKSLASH_ESCAPE,Z,P],G=[/!/,/\//,/\|/,/\?/,/'/,/"/,/#/],H=(I,M,j="\\1")=>{const O=j==="\\1"?j:W.concat(j,M);return W.concat(W.concat("(?:",I,")"),M,/(?:\\.|[^\\\/])*?/,O,/(?:\\.|[^\\\/])*?/,j,V)},L=(I,M,j)=>W.concat(W.concat("(?:",I,")"),M,/(?:\\.|[^\\\/])*?/,j,V),D=[P,Q.HASH_COMMENT_MODE,Q.COMMENT(/^=\w/,/=cut/,{endsWithParent:!0}),X,{className:"string",contains:J,variants:[{begin:"q[qwxr]?\\s*\\(",end:"\\)",relevance:5},{begin:"q[qwxr]?\\s*\\[",end:"\\]",relevance:5},{begin:"q[qwxr]?\\s*\\{",end:"\\}",relevance:5},{begin:"q[qwxr]?\\s*\\|",end:"\\|",relevance:5},{begin:"q[qwxr]?\\s*<",end:">",relevance:5},{begin:"qw\\s+q",end:"q",relevance:5},{begin:"'",end:"'",contains:[Q.BACKSLASH_ESCAPE]},{begin:'"',end:'"'},{begin:"`",end:"`",contains:[Q.BACKSLASH_ESCAPE]},{begin:/\{\w+\}/,relevance:0},{begin:"-?\\w+\\s*=>",relevance:0}]},{className:"number",begin:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",relevance:0},{begin:"(\\/\\/|"+Q.RE_STARTERS_RE+"|\\b(split|return|print|reverse|grep)\\b)\\s*",keywords:"split return print reverse grep",relevance:0,contains:[Q.HASH_COMMENT_MODE,{className:"regexp",variants:[{begin:H("s|tr|y",W.either(...G,{capture:!0}))},{begin:H("s|tr|y","\\(","\\)")},{begin:H("s|tr|y","\\[","\\]")},{begin:H("s|tr|y","\\{","\\}")}],relevance:2},{className:"regexp",variants:[{begin:/(m|qr)\/\//,relevance:0},{begin:L("(?:m|qr)?",/\//,/\//)},{begin:L("m|qr",W.either(...G,{capture:!0}),/\1/)},{begin:L("m|qr",/\(/,/\)/)},{begin:L("m|qr",/\[/,/\]/)},{begin:L("m|qr",/\{/,/\}/)}]}]},{className:"function",beginKeywords:"sub",end:"(\\s*\\(.*?\\))?[;{]",excludeEnd:!0,relevance:5,contains:[Q.TITLE_MODE]},{begin:"-\\w\\b",relevance:0},{begin:"^__DATA__$",end:"^__END__$",subLanguage:"mojolicious",contains:[{begin:"^@@.*",end:"$",className:"comment"}]}];return Z.contains=D,X.contains=D,{name:"Perl",aliases:["pl","pm"],keywords:Y,contains:D}},grmr_php:(Q)=>{const W=Q.regex,V=/(?![A-Za-z0-9])(?![$])/,Y=W.concat(/[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/,V),Z=W.concat(/(\\?[A-Z][a-z0-9_\x7f-\xff]+|\\?[A-Z]+(?=[A-Z][a-z0-9_\x7f-\xff])){1,}/,V),X={scope:"variable",match:"\\$+"+Y},P={scope:"subst",variants:[{begin:/\$\w+/},{begin:/\{\$/,end:/\}/}]},J=Q.inherit(Q.APOS_STRING_MODE,{illegal:null}),H={scope:"string",variants:[Q.inherit(Q.QUOTE_STRING_MODE,{illegal:null,contains:Q.QUOTE_STRING_MODE.contains.concat(P)}),J,{begin:/<<<[ \t]*(?:(\w+)|"(\w+)")\n/,end:/[ \t]*(\w+)\b/,contains:Q.QUOTE_STRING_MODE.contains.concat(P),"on:begin":(N,R)=>{R.data._beginMatch=N[1]||N[2]},"on:end":(N,R)=>{R.data._beginMatch!==N[1]&&R.ignoreMatch()}},Q.END_SAME_AS_BEGIN({begin:/<<<[ \t]*'(\w+)'\n/,end:/[ \t]*(\w+)\b/})]},L={scope:"number",variants:[{begin:"\\b0[bB][01]+(?:_[01]+)*\\b"},{begin:"\\b0[oO][0-7]+(?:_[0-7]+)*\\b"},{begin:"\\b0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*\\b"},{begin:"(?:\\b\\d+(?:_\\d+)*(\\.(?:\\d+(?:_\\d+)*))?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?"}],relevance:0},D=["false","null","true"],I=["__CLASS__","__DIR__","__FILE__","__FUNCTION__","__COMPILER_HALT_OFFSET__","__LINE__","__METHOD__","__NAMESPACE__","__TRAIT__","die","echo","exit","include","include_once","print","require","require_once","array","abstract","and","as","binary","bool","boolean","break","callable","case","catch","class","clone","const","continue","declare","default","do","double","else","elseif","empty","enddeclare","endfor","endforeach","endif","endswitch","endwhile","enum","eval","extends","final","finally","float","for","foreach","from","global","goto","if","implements","instanceof","insteadof","int","integer","interface","isset","iterable","list","match|0","mixed","new","never","object","or","private","protected","public","readonly","real","return","string","switch","throw","trait","try","unset","use","var","void","while","xor","yield"],M=["Error|0","AppendIterator","ArgumentCountError","ArithmeticError","ArrayIterator","ArrayObject","AssertionError","BadFunctionCallException","BadMethodCallException","CachingIterator","CallbackFilterIterator","CompileError","Countable","DirectoryIterator","DivisionByZeroError","DomainException","EmptyIterator","ErrorException","Exception","FilesystemIterator","FilterIterator","GlobIterator","InfiniteIterator","InvalidArgumentException","IteratorIterator","LengthException","LimitIterator","LogicException","MultipleIterator","NoRewindIterator","OutOfBoundsException","OutOfRangeException","OuterIterator","OverflowException","ParentIterator","ParseError","RangeException","RecursiveArrayIterator","RecursiveCachingIterator","RecursiveCallbackFilterIterator","RecursiveDirectoryIterator","RecursiveFilterIterator","RecursiveIterator","RecursiveIteratorIterator","RecursiveRegexIterator","RecursiveTreeIterator","RegexIterator","RuntimeException","SeekableIterator","SplDoublyLinkedList","SplFileInfo","SplFileObject","SplFixedArray","SplHeap","SplMaxHeap","SplMinHeap","SplObjectStorage","SplObserver","SplPriorityQueue","SplQueue","SplStack","SplSubject","SplTempFileObject","TypeError","UnderflowException","UnexpectedValueException","UnhandledMatchError","ArrayAccess","BackedEnum","Closure","Fiber","Generator","Iterator","IteratorAggregate","Serializable","Stringable","Throwable","Traversable","UnitEnum","WeakReference","WeakMap","Directory","__PHP_Incomplete_Class","parent","php_user_filter","self","static","stdClass"],j={keyword:I,literal:((N)=>{const R=[];return N.forEach((E)=>{R.push(E),E.toLowerCase()===E?R.push(E.toUpperCase()):R.push(E.toLowerCase())}),R})(D),built_in:M},O=(N)=>N.map((R)=>R.replace(/\|\d+$/,"")),u={variants:[{match:[/new/,W.concat("[ \t\n]","+"),W.concat("(?!",O(M).join("\\b|"),"\\b)"),Z],scope:{1:"keyword",4:"title.class"}}]},r=W.concat(Y,"\\b(?!\\()"),h={variants:[{match:[W.concat(/::/,W.lookahead(/(?!class\b)/)),r],scope:{2:"variable.constant"}},{match:[/::/,/class/],scope:{2:"variable.language"}},{match:[Z,W.concat(/::/,W.lookahead(/(?!class\b)/)),r],scope:{1:"title.class",3:"variable.constant"}},{match:[Z,W.concat("::",W.lookahead(/(?!class\b)/))],scope:{1:"title.class"}},{match:[Z,/::/,/class/],scope:{1:"title.class",3:"variable.language"}}]},$={scope:"attr",match:W.concat(Y,W.lookahead(":"),W.lookahead(/(?!::)/))},B={relevance:0,begin:/\(/,end:/\)/,keywords:j,contains:[$,X,h,Q.C_BLOCK_COMMENT_MODE,H,L,u]},F={relevance:0,match:[/\b/,W.concat("(?!fn\\b|function\\b|",O(I).join("\\b|"),"|",O(M).join("\\b|"),"\\b)"),Y,W.concat("[ \t\n]","*"),W.lookahead(/(?=\()/)],scope:{3:"title.function.invoke"},contains:[B]};B.contains.push(F);const S=[$,h,Q.C_BLOCK_COMMENT_MODE,H,L,u];return{case_insensitive:!1,keywords:j,contains:[{begin:W.concat(/#\[\s*/,Z),beginScope:"meta",end:/]/,endScope:"meta",keywords:{literal:D,keyword:["new","array"]},contains:[{begin:/\[/,end:/]/,keywords:{literal:D,keyword:["new","array"]},contains:["self",...S]},...S,{scope:"meta",match:Z}]},Q.HASH_COMMENT_MODE,Q.COMMENT("//","$"),Q.COMMENT("/\\*","\\*/",{contains:[{scope:"doctag",match:"@[A-Za-z]+"}]}),{match:/__halt_compiler\(\);/,keywords:"__halt_compiler",starts:{scope:"comment",end:Q.MATCH_NOTHING_RE,contains:[{match:/\?>/,scope:"meta",endsParent:!0}]}},{scope:"meta",variants:[{begin:/<\?php/,relevance:10},{begin:/<\?=/},{begin:/<\?/,relevance:0.1},{begin:/\?>/}]},{scope:"variable.language",match:/\$this\b/},X,F,h,{match:[/const/,/\s/,Y],scope:{1:"keyword",3:"variable.constant"}},u,{scope:"function",relevance:0,beginKeywords:"fn function",end:/[;{]/,excludeEnd:!0,illegal:"[$%\\[]",contains:[{beginKeywords:"use"},Q.UNDERSCORE_TITLE_MODE,{begin:"=>",endsParent:!0},{scope:"params",begin:"\\(",end:"\\)",excludeBegin:!0,excludeEnd:!0,keywords:j,contains:["self",X,h,Q.C_BLOCK_COMMENT_MODE,H,L]}]},{scope:"class",variants:[{beginKeywords:"enum",illegal:/[($"]/},{beginKeywords:"class interface trait",illegal:/[:($"]/}],relevance:0,end:/\{/,excludeEnd:!0,contains:[{beginKeywords:"extends implements"},Q.UNDERSCORE_TITLE_MODE]},{beginKeywords:"namespace",relevance:0,end:";",illegal:/[.']/,contains:[Q.inherit(Q.UNDERSCORE_TITLE_MODE,{scope:"title.class"})]},{beginKeywords:"use",relevance:0,end:";",contains:[{match:/\b(as|const|function)\b/,scope:"keyword"},Q.UNDERSCORE_TITLE_MODE]},H,L]}},grmr_php_template:(Q)=>({name:"PHP template",subLanguage:"xml",contains:[{begin:/<\?(php|=)?/,end:/\?>/,subLanguage:"php",contains:[{begin:"/\\*",end:"\\*/",skip:!0},{begin:'b"',end:'"',skip:!0},{begin:"b'",end:"'",skip:!0},Q.inherit(Q.APOS_STRING_MODE,{illegal:null,className:null,contains:null,skip:!0}),Q.inherit(Q.QUOTE_STRING_MODE,{illegal:null,className:null,contains:null,skip:!0})]}]}),grmr_plaintext:(Q)=>({name:"Plain text",aliases:["text","txt"],disableAutodetect:!0}),grmr_python:(Q)=>{const W=Q.regex,V=/[\p{XID_Start}_]\p{XID_Continue}*/u,Y=["and","as","assert","async","await","break","case","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","in","is","lambda","match","nonlocal|10","not","or","pass","raise","return","try","while","with","yield"],Z={$pattern:/[A-Za-z]\w+|__\w+__/,keyword:Y,built_in:["__import__","abs","all","any","ascii","bin","bool","breakpoint","bytearray","bytes","callable","chr","classmethod","compile","complex","delattr","dict","dir","divmod","enumerate","eval","exec","filter","float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","list","locals","map","max","memoryview","min","next","object","oct","open","ord","pow","print","property","range","repr","reversed","round","set","setattr","slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip"],literal:["__debug__","Ellipsis","False","None","NotImplemented","True"],type:["Any","Callable","Coroutine","Dict","List","Literal","Generic","Optional","Sequence","Set","Tuple","Type","Union"]},X={className:"meta",begin:/^(>>>|\.\.\.) /},P={className:"subst",begin:/\{/,end:/\}/,keywords:Z,illegal:/#/},J={begin:/\{\{/,relevance:0},G={className:"string",contains:[Q.BACKSLASH_ESCAPE],variants:[{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,contains:[Q.BACKSLASH_ESCAPE,X],relevance:10},{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,end:/"""/,contains:[Q.BACKSLASH_ESCAPE,X],relevance:10},{begin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,contains:[Q.BACKSLASH_ESCAPE,X,J,P]},{begin:/([fF][rR]|[rR][fF]|[fF])"""/,end:/"""/,contains:[Q.BACKSLASH_ESCAPE,X,J,P]},{begin:/([uU]|[rR])'/,end:/'/,relevance:10},{begin:/([uU]|[rR])"/,end:/"/,relevance:10},{begin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])"/,end:/"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,contains:[Q.BACKSLASH_ESCAPE,J,P]},{begin:/([fF][rR]|[rR][fF]|[fF])"/,end:/"/,contains:[Q.BACKSLASH_ESCAPE,J,P]},Q.APOS_STRING_MODE,Q.QUOTE_STRING_MODE]},D="\\b|"+Y.join("|"),I={className:"number",relevance:0,variants:[{begin:`(\\b([0-9](_?[0-9])*)|((\\b([0-9](_?[0-9])*))?\\.([0-9](_?[0-9])*)|\\b([0-9](_?[0-9])*)\\.))[eE][+-]?([0-9](_?[0-9])*)[jJ]?(?=${D})`},{begin:"((\\b([0-9](_?[0-9])*))?\\.([0-9](_?[0-9])*)|\\b([0-9](_?[0-9])*)\\.)[jJ]?"},{begin:`\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${D})`},{begin:`\\b0[bB](_?[01])+[lL]?(?=${D})`},{begin:`\\b0[oO](_?[0-7])+[lL]?(?=${D})`},{begin:`\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${D})`},{begin:`\\b([0-9](_?[0-9])*)[jJ](?=${D})`}]},M={className:"comment",begin:W.lookahead(/# type:/),end:/$/,keywords:Z,contains:[{begin:/# type:/},{begin:/#/,end:/\b\B/,endsWithParent:!0}]},j={className:"params",variants:[{className:"",begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:Z,contains:["self",X,I,G,Q.HASH_COMMENT_MODE]}]};return P.contains=[G,I,X],{name:"Python",aliases:["py","gyp","ipython"],unicodeRegex:!0,keywords:Z,illegal:/(<\/|\?)|=>/,contains:[X,I,{begin:/\bself\b/},{beginKeywords:"if",relevance:0},G,M,Q.HASH_COMMENT_MODE,{match:[/\bdef/,/\s+/,V],scope:{1:"keyword",3:"title.function"},contains:[j]},{variants:[{match:[/\bclass/,/\s+/,V,/\s*/,/\(\s*/,V,/\s*\)/]},{match:[/\bclass/,/\s+/,V]}],scope:{1:"keyword",3:"title.class",6:"title.class.inherited"}},{className:"meta",begin:/^[\t ]*@/,end:/(?=#)|$/,contains:[I,j,G]}]}},grmr_python_repl:(Q)=>({aliases:["pycon"],contains:[{className:"meta.prompt",starts:{end:/ |$/,starts:{end:"$",subLanguage:"python"}},variants:[{begin:/^>>>(?=[ ]|$)/},{begin:/^\.\.\.(?=[ ]|$)/}]}]}),grmr_r:(Q)=>{const W=Q.regex,V=/(?:(?:[a-zA-Z]|\.[._a-zA-Z])[._a-zA-Z0-9]*)|\.(?!\d)/,Y=W.either(/0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*[pP][+-]?\d+i?/,/0[xX][0-9a-fA-F]+(?:[pP][+-]?\d+)?[Li]?/,/(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?[Li]?/),Z=/[=!<>:]=|\|\||&&|:::?|<-|<<-|->>|->|\|>|[-+*\/?!$&|:<=>@^~]|\*\*/,X=W.either(/[()]/,/[{}]/,/\[\[/,/[[\]]/,/\\/,/,/);return{name:"R",keywords:{$pattern:V,keyword:"function if in break next repeat else for while",literal:"NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10",built_in:"LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm"},contains:[Q.COMMENT(/#'/,/$/,{contains:[{scope:"doctag",match:/@examples/,starts:{end:W.lookahead(W.either(/\n^#'\s*(?=@[a-zA-Z]+)/,/\n^(?!#')/)),endsParent:!0}},{scope:"doctag",begin:"@param",end:/$/,contains:[{scope:"variable",variants:[{match:V},{match:/`(?:\\.|[^`\\])+`/}],endsParent:!0}]},{scope:"doctag",match:/@[a-zA-Z]+/},{scope:"keyword",match:/\\[a-zA-Z]+/}]}),Q.HASH_COMMENT_MODE,{scope:"string",contains:[Q.BACKSLASH_ESCAPE],variants:[Q.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\(/,end:/\)(-*)"/}),Q.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\{/,end:/\}(-*)"/}),Q.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\[/,end:/\](-*)"/}),Q.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\(/,end:/\)(-*)'/}),Q.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\{/,end:/\}(-*)'/}),Q.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\[/,end:/\](-*)'/}),{begin:'"',end:'"',relevance:0},{begin:"'",end:"'",relevance:0}]},{relevance:0,variants:[{scope:{1:"operator",2:"number"},match:[Z,Y]},{scope:{1:"operator",2:"number"},match:[/%[^%]*%/,Y]},{scope:{1:"punctuation",2:"number"},match:[X,Y]},{scope:{2:"number"},match:[/[^a-zA-Z0-9._]|^/,Y]}]},{scope:{3:"operator"},match:[V,/\s+/,/<-/,/\s+/]},{scope:"operator",relevance:0,variants:[{match:Z},{match:/%[^%]*%/}]},{scope:"punctuation",relevance:0,match:X},{begin:"`",end:"`",contains:[{begin:/\\./}]}]}},grmr_ruby:(Q)=>{const W=Q.regex,Y=W.either(/\b([A-Z]+[a-z0-9]+)+/,/\b([A-Z]+[a-z0-9]+)+[A-Z]+/),Z=W.concat(Y,/(::\w+)*/),X={"variable.constant":["__FILE__","__LINE__","__ENCODING__"],"variable.language":["self","super"],keyword:["alias","and","begin","BEGIN","break","case","class","defined","do","else","elsif","end","END","ensure","for","if","in","module","next","not","or","redo","require","rescue","retry","return","then","undef","unless","until","when","while","yield","include","extend","prepend","public","private","protected","raise","throw"],built_in:["proc","lambda","attr_accessor","attr_reader","attr_writer","define_method","private_constant","module_function"],literal:["true","false","nil"]},P={className:"doctag",begin:"@[A-Za-z]+"},J={begin:"#<",end:">"},G=[Q.COMMENT("#","$",{contains:[P]}),Q.COMMENT("^=begin","^=end",{contains:[P],relevance:10}),Q.COMMENT("^__END__",Q.MATCH_NOTHING_RE)],H={className:"subst",begin:/#\{/,end:/\}/,keywords:X},L={className:"string",contains:[Q.BACKSLASH_ESCAPE,H],variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/`/,end:/`/},{begin:/%[qQwWx]?\(/,end:/\)/},{begin:/%[qQwWx]?\[/,end:/\]/},{begin:/%[qQwWx]?\{/,end:/\}/},{begin:/%[qQwWx]?</,end:/>/},{begin:/%[qQwWx]?\//,end:/\//},{begin:/%[qQwWx]?%/,end:/%/},{begin:/%[qQwWx]?-/,end:/-/},{begin:/%[qQwWx]?\|/,end:/\|/},{begin:/\B\?(\\\d{1,3})/},{begin:/\B\?(\\x[A-Fa-f0-9]{1,2})/},{begin:/\B\?(\\u\{?[A-Fa-f0-9]{1,6}\}?)/},{begin:/\B\?(\\M-\\C-|\\M-\\c|\\c\\M-|\\M-|\\C-\\M-)[\x20-\x7e]/},{begin:/\B\?\\(c|C-)[\x20-\x7e]/},{begin:/\B\?\\?\S/},{begin:W.concat(/<<[-~]?'?/,W.lookahead(/(\w+)(?=\W)[^\n]*\n(?:[^\n]*\n)*?\s*\1\b/)),contains:[Q.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,contains:[Q.BACKSLASH_ESCAPE,H]})]}]},I={className:"number",relevance:0,variants:[{begin:"\\b([1-9](_?[0-9])*|0)(\\.([0-9](_?[0-9])*))?([eE][+-]?([0-9](_?[0-9])*)|r)?i?\\b"},{begin:"\\b0[dD][0-9](_?[0-9])*r?i?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*r?i?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*r?i?\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\b"},{begin:"\\b0(_?[0-7])+r?i?\\b"}]},M={variants:[{match:/\(\)/},{className:"params",begin:/\(/,end:/(?=\))/,excludeBegin:!0,endsParent:!0,keywords:X}]},j=[L,{variants:[{match:[/class\s+/,Z,/\s+<\s+/,Z]},{match:[/\b(class|module)\s+/,Z]}],scope:{2:"title.class",4:"title.class.inherited"},keywords:X},{match:[/(include|extend)\s+/,Z],scope:{2:"title.class"},keywords:X},{relevance:0,match:[Z,/\.new[. (]/],scope:{1:"title.class"}},{relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"},{relevance:0,match:Y,scope:"title.class"},{match:[/def/,/\s+/,"([a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?)"],scope:{1:"keyword",3:"title.function"},contains:[M]},{begin:Q.IDENT_RE+"::"},{className:"symbol",begin:Q.UNDERSCORE_IDENT_RE+"(!|\\?)?:",relevance:0},{className:"symbol",begin:":(?!\\s)",contains:[L,{begin:"([a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?)"}],relevance:0},I,{className:"variable",begin:"(\\$\\W)|((\\$|@@?)(\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])"},{className:"params",begin:/\|/,end:/\|/,excludeBegin:!0,excludeEnd:!0,relevance:0,keywords:X},{begin:"("+Q.RE_STARTERS_RE+"|unless)\\s*",keywords:"unless",contains:[{className:"regexp",contains:[Q.BACKSLASH_ESCAPE,H],illegal:/\n/,variants:[{begin:"/",end:"/[a-z]*"},{begin:/%r\{/,end:/\}[a-z]*/},{begin:"%r\\(",end:"\\)[a-z]*"},{begin:"%r!",end:"![a-z]*"},{begin:"%r\\[",end:"\\][a-z]*"}]}].concat(J,G),relevance:0}].concat(J,G);H.contains=j,M.contains=j;const O=[{begin:/^\s*=>/,starts:{end:"$",contains:j}},{className:"meta.prompt",begin:"^([>?]>|[\\w#]+\\(\\w+\\):\\d+:\\d+[>*]|(\\w+-)?\\d+\\.\\d+\\.\\d+(p\\d+)?[^\\d][^>]+>)(?=[ ])",starts:{end:"$",keywords:X,contains:j}}];return G.unshift(J),{name:"Ruby",aliases:["rb","gemspec","podspec","thor","irb"],keywords:X,illegal:/\/\*/,contains:[Q.SHEBANG({binary:"ruby"})].concat(O).concat(G).concat(j)}},grmr_rust:(Q)=>{const W=Q.regex,V={className:"title.function.invoke",relevance:0,begin:W.concat(/\b/,/(?!let|for|while|if|else|match\b)/,Q.IDENT_RE,W.lookahead(/\s*\(/))},Z=["drop ","Copy","Send","Sized","Sync","Drop","Fn","FnMut","FnOnce","ToOwned","Clone","Debug","PartialEq","PartialOrd","Eq","Ord","AsRef","AsMut","Into","From","Default","Iterator","Extend","IntoIterator","DoubleEndedIterator","ExactSizeIterator","SliceConcatExt","ToString","assert!","assert_eq!","bitflags!","bytes!","cfg!","col!","concat!","concat_idents!","debug_assert!","debug_assert_eq!","env!","eprintln!","panic!","file!","format!","format_args!","include_bytes!","include_str!","line!","local_data_key!","module_path!","option_env!","print!","println!","select!","stringify!","try!","unimplemented!","unreachable!","vec!","write!","writeln!","macro_rules!","assert_ne!","debug_assert_ne!"],X=["i8","i16","i32","i64","i128","isize","u8","u16","u32","u64","u128","usize","f32","f64","str","char","bool","Box","Option","Result","String","Vec"];return{name:"Rust",aliases:["rs"],keywords:{$pattern:Q.IDENT_RE+"!?",type:X,keyword:["abstract","as","async","await","become","box","break","const","continue","crate","do","dyn","else","enum","extern","false","final","fn","for","if","impl","in","let","loop","macro","match","mod","move","mut","override","priv","pub","ref","return","self","Self","static","struct","super","trait","true","try","type","typeof","unsafe","unsized","use","virtual","where","while","yield"],literal:["true","false","Some","None","Ok","Err"],built_in:Z},illegal:"</",contains:[Q.C_LINE_COMMENT_MODE,Q.COMMENT("/\\*","\\*/",{contains:["self"]}),Q.inherit(Q.QUOTE_STRING_MODE,{begin:/b?"/,illegal:null}),{className:"string",variants:[{begin:/b?r(#*)"(.|\n)*?"\1(?!#)/},{begin:/b?'\\?(x\w{2}|u\w{4}|U\w{8}|.)'/}]},{className:"symbol",begin:/'[a-zA-Z_][a-zA-Z0-9_]*/},{className:"number",variants:[{begin:"\\b0b([01_]+)([ui](8|16|32|64|128|size)|f(32|64))?"},{begin:"\\b0o([0-7_]+)([ui](8|16|32|64|128|size)|f(32|64))?"},{begin:"\\b0x([A-Fa-f0-9_]+)([ui](8|16|32|64|128|size)|f(32|64))?"},{begin:"\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)([ui](8|16|32|64|128|size)|f(32|64))?"}],relevance:0},{begin:[/fn/,/\s+/,Q.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.function"}},{className:"meta",begin:"#!?\\[",end:"\\]",contains:[{className:"string",begin:/"/,end:/"/}]},{begin:[/let/,/\s+/,/(?:mut\s+)?/,Q.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"keyword",4:"variable"}},{begin:[/for/,/\s+/,Q.UNDERSCORE_IDENT_RE,/\s+/,/in/],className:{1:"keyword",3:"variable",5:"keyword"}},{begin:[/type/,/\s+/,Q.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.class"}},{begin:[/(?:trait|enum|struct|union|impl|for)/,/\s+/,Q.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.class"}},{begin:Q.IDENT_RE+"::",keywords:{keyword:"Self",built_in:Z,type:X}},{className:"punctuation",begin:"->"},V]}},grmr_scss:(Q)=>{const W=S0(Q),V=N0,Y=M0,X={className:"variable",begin:"(\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\b",relevance:0};return{name:"SCSS",case_insensitive:!0,illegal:"[=/|']",contains:[Q.C_LINE_COMMENT_MODE,Q.C_BLOCK_COMMENT_MODE,W.CSS_NUMBER_MODE,{className:"selector-id",begin:"#[A-Za-z0-9_-]+",relevance:0},{className:"selector-class",begin:"\\.[A-Za-z0-9_-]+",relevance:0},W.ATTRIBUTE_SELECTOR_MODE,{className:"selector-tag",begin:"\\b("+f0.join("|")+")\\b",relevance:0},{className:"selector-pseudo",begin:":("+Y.join("|")+")"},{className:"selector-pseudo",begin:":(:)?("+V.join("|")+")"},X,{begin:/\(/,end:/\)/,contains:[W.CSS_NUMBER_MODE]},W.CSS_VARIABLE,{className:"attribute",begin:"\\b("+h0.join("|")+")\\b"},{begin:"\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"},{begin:/:/,end:/[;}{]/,relevance:0,contains:[W.BLOCK_COMMENT,X,W.HEXCOLOR,W.CSS_NUMBER_MODE,Q.QUOTE_STRING_MODE,Q.APOS_STRING_MODE,W.IMPORTANT,W.FUNCTION_DISPATCH]},{begin:"@(page|font-face)",keywords:{$pattern:"@[a-z-]+",keyword:"@page @font-face"}},{begin:"@",end:"[{;]",returnBegin:!0,keywords:{$pattern:/[a-z-]+/,keyword:"and or not only",attribute:w0.join(" ")},contains:[{begin:"@[a-z-]+",className:"keyword"},{begin:/[a-z-]+(?=:)/,className:"attribute"},X,Q.QUOTE_STRING_MODE,Q.APOS_STRING_MODE,W.HEXCOLOR,W.CSS_NUMBER_MODE]},W.FUNCTION_DISPATCH]}},grmr_shell:(Q)=>({name:"Shell Session",aliases:["console","shellsession"],contains:[{className:"meta.prompt",begin:/^\s{0,3}[/~\w\d[\]()@-]*[>%$#][ ]?/,starts:{end:/[^\\](?=\s*$)/,subLanguage:"bash"}}]}),grmr_sql:(Q)=>{const W=Q.regex,V=Q.COMMENT("--","$"),Y=["true","false","unknown"],Z=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"],X=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"],P=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"],J=X,G=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year","add","asc","collation","desc","final","first","last","view"].filter((L)=>!X.includes(L)),H={begin:W.concat(/\b/,W.either(...J),/\s*\(/),relevance:0,keywords:{built_in:J}};return{name:"SQL",case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:((L,{exceptions:D,when:I}={})=>{const M=I;return D=D||[],L.map((j)=>j.match(/\|\d+$/)||D.includes(j)?j:M(j)?j+"|0":j)})(G,{when:(L)=>L.length<3}),literal:Y,type:Z,built_in:["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"]},contains:[{begin:W.either(...P),relevance:0,keywords:{$pattern:/[\w\.]+/,keyword:G.concat(P),literal:Y,type:Z}},{className:"type",begin:W.either("double precision","large object","with timezone","without timezone")},H,{className:"variable",begin:/@[a-z0-9][a-z0-9_]*/},{className:"string",variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},{begin:/"/,end:/"/,contains:[{begin:/""/}]},Q.C_NUMBER_MODE,Q.C_BLOCK_COMMENT_MODE,V,{className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0}]}},grmr_swift:(Q)=>{const W={match:/\s+/,relevance:0},V=Q.COMMENT("/\\*","\\*/",{contains:["self"]}),Y=[Q.C_LINE_COMMENT_MODE,V],Z={match:[/\./,w(...x1,...I1)],className:{2:"keyword"}},X={match:U(/\./,w(...p0)),relevance:0},P=p0.filter((y)=>typeof y=="string").concat(["_|0"]),J={variants:[{className:"keyword",match:w(...p0.filter((y)=>typeof y!="string").concat(c1).map(g0),...I1)}]},G={$pattern:w(/\b\w+/,/#\w+/),keyword:P.concat(o1),literal:U1},H=[Z,X,J],L=[{match:U(/\./,w(...D1)),relevance:0},{className:"built_in",match:U(/\b/,w(...D1),/(?=\()/)}],D={match:/->/,relevance:0},I=[D,{className:"operator",relevance:0,variants:[{match:d0},{match:`\\.(\\.|${j1})+`}]}],O={className:"number",relevance:0,variants:[{match:"\\b(([0-9]_*)+)(\\.(([0-9]_*)+))?([eE][+-]?(([0-9]_*)+))?\\b"},{match:"\\b0x(([0-9a-fA-F]_*)+)(\\.(([0-9a-fA-F]_*)+))?([pP][+-]?(([0-9]_*)+))?\\b"},{match:/\b0o([0-7]_*)+\b/},{match:/\b0b([01]_*)+\b/}]},u=(y="")=>({className:"subst",variants:[{match:U(/\\/,y,/[0\\tnr"']/)},{match:U(/\\/,y,/u\{[0-9a-fA-F]{1,8}\}/)}]}),r=(y="")=>({className:"subst",match:U(/\\/,y,/[\t ]*(?:[\r\n]|\r\n)/)}),h=(y="")=>({className:"subst",label:"interpol",begin:U(/\\/,y,/\(/),end:/\)/}),$=(y="")=>({begin:U(y,/"""/),end:U(/"""/,y),contains:[u(y),r(y),h(y)]}),B=(y="")=>({begin:U(y,/"/),end:U(/"/,y),contains:[u(y),h(y)]}),F={className:"string",variants:[$(),$("#"),$("##"),$("###"),B(),B("#"),B("##"),B("###")]},S=[Q.BACKSLASH_ESCAPE,{begin:/\[/,end:/\]/,relevance:0,contains:[Q.BACKSLASH_ESCAPE]}],N={begin:/\/[^\s](?=[^/\n]*\/)/,end:/\//,contains:S},R=(y)=>{const p=U(y,/\//),T=U(/\//,y);return{begin:p,end:T,contains:[...S,{scope:"comment",begin:`#(?!.*${T})`,end:/$/}]}},E={scope:"regexp",variants:[R("###"),R("##"),R("#"),N]},m={match:U(/`/,e,/`/)},_=[m,{className:"variable",match:/\$\d+/},{className:"variable",match:`\\\$${y0}+`}],g=[{match:/(@|#(un)?)available/,scope:"keyword",starts:{contains:[{begin:/\(/,end:/\)/,keywords:i1,contains:[...I,O,F]}]}},{scope:"keyword",match:U(/@/,w(...s1))},{scope:"meta",match:U(/@/,e)}],a={match:c(/\b[A-Z]/),relevance:0,contains:[{className:"type",match:U(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/,y0,"+")},{className:"type",match:m0,relevance:0},{match:/[?!]+/,relevance:0},{match:/\.\.\./,relevance:0},{match:U(/\s+&\s+/,c(m0)),relevance:0}]},P0={begin:/</,end:/>/,keywords:G,contains:[...Y,...H,...g,D,a]};a.contains.push(P0);const V0={begin:/\(/,end:/\)/,relevance:0,keywords:G,contains:["self",{match:U(e,/\s*:/),keywords:"_|0",relevance:0},...Y,E,...H,...L,...I,O,F,..._,...g,a]},t={begin:/</,end:/>/,keywords:"repeat each",contains:[...Y,a]},X0={begin:/\(/,end:/\)/,keywords:G,contains:[{begin:w(c(U(e,/\s*:/)),c(U(e,/\s+/,e,/\s*:/))),end:/:/,relevance:0,contains:[{className:"keyword",match:/\b_\b/},{className:"params",match:e}]},...Y,...H,...I,O,F,...g,a,V0],endsParent:!0,illegal:/["']/},l={match:[/(func|macro)/,/\s+/,w(m.match,e,d0)],className:{1:"keyword",3:"title.function"},contains:[t,X0,W],illegal:[/\[/,/%/]},j0={match:[/\b(?:subscript|init[?!]?)/,/\s*(?=[<(])/],className:{1:"keyword"},contains:[t,X0,W],illegal:/\[|%/},G0={match:[/operator/,/\s+/,d0],className:{1:"keyword",3:"title"}},k={begin:[/precedencegroup/,/\s+/,m0],className:{1:"keyword",3:"title"},contains:[a],keywords:[...l1,...U1],end:/}/};for(let y of F.variants){const p=y.contains.find((z0)=>z0.label==="interpol");p.keywords=G;const T=[...H,...L,...I,O,F,..._];p.contains=[...T,{begin:/\(/,end:/\)/,contains:["self",...T]}]}return{name:"Swift",keywords:G,contains:[...Y,l,j0,{beginKeywords:"struct protocol class extension enum actor",end:"\\{",excludeEnd:!0,keywords:G,contains:[Q.inherit(Q.TITLE_MODE,{className:"title.class",begin:/[A-Za-z$_][\u00C0-\u02B80-9A-Za-z$_]*/}),...H]},G0,k,{beginKeywords:"import",end:/$/,contains:[...Y],relevance:0},E,...H,...L,...I,O,F,..._,...g,a,V0]}},grmr_typescript:(Q)=>{const W=B1(Q),V=E0,Y=["any","void","number","boolean","string","object","never","symbol","bigint","unknown"],Z={beginKeywords:"namespace",end:/\{/,excludeEnd:!0,contains:[W.exports.CLASS_REFERENCE]},X={beginKeywords:"interface",end:/\{/,excludeEnd:!0,keywords:{keyword:"interface extends",built_in:Y},contains:[W.exports.CLASS_REFERENCE]},P={$pattern:E0,keyword:P1.concat(["type","namespace","interface","public","private","protected","implements","declare","abstract","readonly","enum","override"]),literal:G1,built_in:z1.concat(Y),"variable.language":q1},J={className:"meta",begin:"@"+V},G=(H,L,D)=>{const I=H.contains.findIndex((M)=>M.label===L);if(I===-1)throw Error("can not find mode to replace");H.contains.splice(I,1,D)};return Object.assign(W.keywords,P),W.exports.PARAMS_CONTAINS.push(J),W.contains=W.contains.concat([J,Z,X]),G(W,"shebang",Q.SHEBANG()),G(W,"use_strict",{className:"meta",relevance:10,begin:/^\s*['"]use strict['"]/}),W.contains.find((H)=>H.label==="func.def").relevance=0,Object.assign(W,{name:"TypeScript",aliases:["ts","tsx","mts","cts"]}),W},grmr_vbnet:(Q)=>{const W=Q.regex,V=/\d{1,2}\/\d{1,2}\/\d{4}/,Y=/\d{4}-\d{1,2}-\d{1,2}/,Z=/(\d|1[012])(:\d+){0,2} *(AM|PM)/,X=/\d{1,2}(:\d{1,2}){1,2}/,P={className:"literal",variants:[{begin:W.concat(/# */,W.either(Y,V),/ *#/)},{begin:W.concat(/# */,X,/ *#/)},{begin:W.concat(/# */,Z,/ *#/)},{begin:W.concat(/# */,W.either(Y,V),/ +/,W.either(Z,X),/ *#/)}]},J=Q.COMMENT(/'''/,/$/,{contains:[{className:"doctag",begin:/<\/?/,end:/>/}]}),G=Q.COMMENT(null,/$/,{variants:[{begin:/'/},{begin:/([\t ]|^)REM(?=\s)/}]});return{name:"Visual Basic .NET",aliases:["vb"],case_insensitive:!0,classNameAliases:{label:"symbol"},keywords:{keyword:"addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield",built_in:"addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort",type:"boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort",literal:"true false nothing"},illegal:"//|\\{|\\}|endif|gosub|variant|wend|^\\$ ",contains:[{className:"string",begin:/"(""|[^/n])"C\b/},{className:"string",begin:/"/,end:/"/,illegal:/\n/,contains:[{begin:/""/}]},P,{className:"number",relevance:0,variants:[{begin:/\b\d[\d_]*((\.[\d_]+(E[+-]?[\d_]+)?)|(E[+-]?[\d_]+))[RFD@!#]?/},{begin:/\b\d[\d_]*((U?[SIL])|[%&])?/},{begin:/&H[\dA-F_]+((U?[SIL])|[%&])?/},{begin:/&O[0-7_]+((U?[SIL])|[%&])?/},{begin:/&B[01_]+((U?[SIL])|[%&])?/}]},{className:"label",begin:/^\w+:/},J,G,{className:"meta",begin:/[\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\b/,end:/$/,keywords:{keyword:"const disable else elseif enable end externalsource if region then"},contains:[G]}]}},grmr_wasm:(Q)=>{Q.regex;const W=Q.COMMENT(/\(;/,/;\)/);return W.contains.push("self"),{name:"WebAssembly",keywords:{$pattern:/[\w.]+/,keyword:["anyfunc","block","br","br_if","br_table","call","call_indirect","data","drop","elem","else","end","export","func","global.get","global.set","local.get","local.set","local.tee","get_global","get_local","global","if","import","local","loop","memory","memory.grow","memory.size","module","mut","nop","offset","param","result","return","select","set_global","set_local","start","table","tee_local","then","type","unreachable"]},contains:[Q.COMMENT(/;;/,/$/),W,{match:[/(?:offset|align)/,/\s*/,/=/],className:{1:"keyword",3:"operator"}},{className:"variable",begin:/\$[\w_]+/},{match:/(\((?!;)|\))+/,className:"punctuation",relevance:0},{begin:[/(?:func|call|call_indirect)/,/\s+/,/\$[^\s)]+/],className:{1:"keyword",3:"title.function"}},Q.QUOTE_STRING_MODE,{match:/(i32|i64|f32|f64)(?!\.)/,className:"type"},{className:"keyword",match:/\b(f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))\b/},{className:"number",relevance:0,match:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/}]}},grmr_xml:(Q)=>{const W=Q.regex,V=W.concat(/[\p{L}_]/u,W.optional(/[\p{L}0-9_.-]*:/u),/[\p{L}0-9_.-]*/u),Y={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},Z={begin:/\s/,contains:[{className:"keyword",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\n/}]},X=Q.inherit(Z,{begin:/\(/,end:/\)/}),P=Q.inherit(Q.APOS_STRING_MODE,{className:"string"}),J=Q.inherit(Q.QUOTE_STRING_MODE,{className:"string"}),G={endsWithParent:!0,illegal:/</,relevance:0,contains:[{className:"attr",begin:/[\p{L}0-9._:-]+/u,relevance:0},{begin:/=\s*/,relevance:0,contains:[{className:"string",endsParent:!0,variants:[{begin:/"/,end:/"/,contains:[Y]},{begin:/'/,end:/'/,contains:[Y]},{begin:/[^\s"'=<>`]+/}]}]}]};return{name:"HTML, XML",aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist","wsf","svg"],case_insensitive:!0,unicodeRegex:!0,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,relevance:10,contains:[Z,J,P,X,{begin:/\[/,end:/\]/,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,contains:[Z,X,J,P]}]}]},Q.COMMENT(/<!--/,/-->/,{relevance:10}),{begin:/<!\[CDATA\[/,end:/\]\]>/,relevance:10},Y,{className:"meta",end:/\?>/,variants:[{begin:/<\?xml/,relevance:10,contains:[J]},{begin:/<\?[a-z][a-z0-9]+/}]},{className:"tag",begin:/<style(?=\s|>)/,end:/>/,keywords:{name:"style"},contains:[G],starts:{end:/<\/style>/,returnEnd:!0,subLanguage:["css","xml"]}},{className:"tag",begin:/<script(?=\s|>)/,end:/>/,keywords:{name:"script"},contains:[G],starts:{end:/<\/script>/,returnEnd:!0,subLanguage:["javascript","handlebars","xml"]}},{className:"tag",begin:/<>|<\/>/},{className:"tag",begin:W.concat(/</,W.lookahead(W.concat(V,W.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[{className:"name",begin:V,relevance:0,starts:G}]},{className:"tag",begin:W.concat(/<\//,W.lookahead(W.concat(V,/>/))),contains:[{className:"name",begin:V,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}},grmr_yaml:(Q)=>{const Y={className:"string",relevance:0,variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/\S+/}],contains:[Q.BACKSLASH_ESCAPE,{className:"template-variable",variants:[{begin:/\{\{/,end:/\}\}/},{begin:/%\{/,end:/\}/}]}]},Z=Q.inherit(Y,{variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/[^\s,{}[\]]+/}]}),X={end:",",endsWithParent:!0,excludeEnd:!0,keywords:"true false yes no null",relevance:0},P={begin:/\{/,end:/\}/,contains:[X],illegal:"\\n",relevance:0},J={begin:"\\[",end:"\\]",contains:[X],illegal:"\\n",relevance:0},G=[{className:"attr",variants:[{begin:"\\w[\\w :\\/.-]*:(?=[ \t]|$)"},{begin:'"\\w[\\w :\\/.-]*":(?=[ \t]|$)'},{begin:"'\\w[\\w :\\/.-]*':(?=[ \t]|$)"}]},{className:"meta",begin:"^---\\s*$",relevance:10},{className:"string",begin:"[\\|>]([1-9]?[+-])?[ ]*\\n( +)[^ ][^\\n]*\\n(\\2[^\\n]+\\n?)*"},{begin:"<%[%=-]?",end:"[%-]?%>",subLanguage:"ruby",excludeBegin:!0,excludeEnd:!0,relevance:0},{className:"type",begin:"!\\w+![\\w#;/?:@&=+$,.~*'()[\\]]+"},{className:"type",begin:"!<[\\w#;/?:@&=+$,.~*'()[\\]]+>"},{className:"type",begin:"![\\w#;/?:@&=+$,.~*'()[\\]]+"},{className:"type",begin:"!![\\w#;/?:@&=+$,.~*'()[\\]]+"},{className:"meta",begin:"&"+Q.UNDERSCORE_IDENT_RE+"$"},{className:"meta",begin:"\\*"+Q.UNDERSCORE_IDENT_RE+"$"},{className:"bullet",begin:"-(?=[ ]|$)",relevance:0},Q.HASH_COMMENT_MODE,{beginKeywords:"true false yes no null",keywords:{literal:"true false yes no null"}},{className:"number",begin:"\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\.[0-9]*)?([ \\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\b"},{className:"number",begin:Q.C_NUMBER_RE+"\\b",relevance:0},P,J,Y],H=[...G];return H.pop(),H.push(Z),X.contains=H,{name:"YAML",case_insensitive:!0,aliases:["yml"],contains:G}}});const R1=u1;for(let Q of Object.keys(k1)){const W=Q.replace("grmr_","").replace("_","-");R1.registerLanguage(W,k1[Q])}return R1}();typeof M1=="object"&&typeof c0!="undefined"&&(c0.exports=$0);/*! `c` grammar compiled for Highlight.js 11.9.0 */(()=>{var x=(()=>{return(z)=>{const d=z.regex,A=z.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),n="(decltype\\(auto\\)|"+d.optional("[a-zA-Z_]\\w*::")+"[a-zA-Z_]\\w*"+d.optional("<[^<>]+>")+")",o={className:"type",variants:[{begin:"\\b[a-z\\d_]*_t\\b"},{match:/\batomic_[a-z]{3,6}\b/}]},s={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[z.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},z.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},i={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},c={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},z.inherit(s,{className:"string"}),{className:"string",begin:/<.*?>/},A,z.C_BLOCK_COMMENT_MODE]},I0={className:"title",begin:d.optional("[a-zA-Z_]\\w*::")+z.IDENT_RE,relevance:0},Z0=d.optional("[a-zA-Z_]\\w*::")+z.IDENT_RE+"\\s*\\(",U={keyword:["asm","auto","break","case","continue","default","do","else","enum","extern","for","fortran","goto","if","inline","register","restrict","return","sizeof","struct","switch","typedef","union","volatile","while","_Alignas","_Alignof","_Atomic","_Generic","_Noreturn","_Static_assert","_Thread_local","alignas","alignof","noreturn","static_assert","thread_local","_Pragma"],type:["float","double","signed","unsigned","int","short","long","char","void","_Bool","_Complex","_Imaginary","_Decimal32","_Decimal64","_Decimal128","const","static","complex","bool","imaginary"],literal:"true false NULL",built_in:"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr"},w=[c,o,A,z.C_BLOCK_COMMENT_MODE,i,s],W0={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:U,contains:w.concat([{begin:/\(/,end:/\)/,keywords:U,contains:w.concat(["self"]),relevance:0}]),relevance:0},U0={begin:"("+n+"[\\*&\\s]+)+"+Z0,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:U,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:"decltype\\(auto\\)",keywords:U,relevance:0},{begin:Z0,returnBegin:!0,contains:[z.inherit(I0,{className:"title.function"})],relevance:0},{relevance:0,match:/,/},{className:"params",begin:/\(/,end:/\)/,keywords:U,relevance:0,contains:[A,z.C_BLOCK_COMMENT_MODE,s,i,o,{begin:/\(/,end:/\)/,keywords:U,relevance:0,contains:["self",A,z.C_BLOCK_COMMENT_MODE,s,i,o]}]},o,A,z.C_BLOCK_COMMENT_MODE,c]};return{name:"C",aliases:["h"],keywords:U,disableAutodetect:!0,illegal:"</",contains:[].concat(W0,U0,w,[c,{begin:z.IDENT_RE+"::",keywords:U},{className:"class",beginKeywords:"enum class struct union",end:/[{;:<>=]/,contains:[{beginKeywords:"final class struct"},z.TITLE_MODE]}]),exports:{preprocessor:c,strings:s,keywords:U}}}})();$0.registerLanguage("c",x)})();/*! `go` grammar compiled for Highlight.js 11.9.0 */(()=>{var x=(()=>{return(z)=>{const d={keyword:["break","case","chan","const","continue","default","defer","else","fallthrough","for","func","go","goto","if","import","interface","map","package","range","return","select","struct","switch","type","var"],type:["bool","byte","complex64","complex128","error","float32","float64","int8","int16","int32","int64","string","uint8","uint16","uint32","uint64","int","uint","uintptr","rune"],literal:["true","false","iota","nil"],built_in:["append","cap","close","complex","copy","imag","len","make","new","panic","print","println","real","recover","delete"]};return{name:"Go",aliases:["golang"],keywords:d,illegal:"</",contains:[z.C_LINE_COMMENT_MODE,z.C_BLOCK_COMMENT_MODE,{className:"string",variants:[z.QUOTE_STRING_MODE,z.APOS_STRING_MODE,{begin:"`",end:"`"}]},{className:"number",variants:[{begin:z.C_NUMBER_RE+"[i]",relevance:1},z.C_NUMBER_MODE]},{begin:/:=/},{className:"function",beginKeywords:"func",end:"\\s*(\\{|$)",excludeEnd:!0,contains:[z.TITLE_MODE,{className:"params",begin:/\(/,end:/\)/,endsParent:!0,keywords:d,illegal:/["']/}]}]}}})();$0.registerLanguage("go",x)})();/*! `shell` grammar compiled for Highlight.js 11.9.0 */(()=>{var x=(()=>{return(z)=>({name:"Shell Session",aliases:["console","shellsession"],contains:[{className:"meta.prompt",begin:/^\s{0,3}[/~\w\d[\]()@-]*[>%$#][ ]?/,starts:{end:/[^\\](?=\s*$)/,subLanguage:"bash"}}]})})();$0.registerLanguage("shell",x)})();/*! `cpp` grammar compiled for Highlight.js 11.9.0 */(()=>{var x=(()=>{return(z)=>{const d=z.regex,A=z.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),n="(?!struct)(decltype\\(auto\\)|"+d.optional("[a-zA-Z_]\\w*::")+"[a-zA-Z_]\\w*"+d.optional("<[^<>]+>")+")",o={className:"type",begin:"\\b[a-z\\d_]*_t\\b"},s={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[z.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},z.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},i={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},c={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},z.inherit(s,{className:"string"}),{className:"string",begin:/<.*?>/},A,z.C_BLOCK_COMMENT_MODE]},I0={className:"title",begin:d.optional("[a-zA-Z_]\\w*::")+z.IDENT_RE,relevance:0},Z0=d.optional("[a-zA-Z_]\\w*::")+z.IDENT_RE+"\\s*\\(",U={type:["bool","char","char16_t","char32_t","char8_t","double","float","int","long","short","void","wchar_t","unsigned","signed","const","static"],keyword:["alignas","alignof","and","and_eq","asm","atomic_cancel","atomic_commit","atomic_noexcept","auto","bitand","bitor","break","case","catch","class","co_await","co_return","co_yield","compl","concept","const_cast|10","consteval","constexpr","constinit","continue","decltype","default","delete","do","dynamic_cast|10","else","enum","explicit","export","extern","false","final","for","friend","goto","if","import","inline","module","mutable","namespace","new","noexcept","not","not_eq","nullptr","operator","or","or_eq","override","private","protected","public","reflexpr","register","reinterpret_cast|10","requires","return","sizeof","static_assert","static_cast|10","struct","switch","synchronized","template","this","thread_local","throw","transaction_safe","transaction_safe_dynamic","true","try","typedef","typeid","typename","union","using","virtual","volatile","while","xor","xor_eq"],literal:["NULL","false","nullopt","nullptr","true"],built_in:["_Pragma"],_type_hints:["any","auto_ptr","barrier","binary_semaphore","bitset","complex","condition_variable","condition_variable_any","counting_semaphore","deque","false_type","future","imaginary","initializer_list","istringstream","jthread","latch","lock_guard","multimap","multiset","mutex","optional","ostringstream","packaged_task","pair","promise","priority_queue","queue","recursive_mutex","recursive_timed_mutex","scoped_lock","set","shared_future","shared_lock","shared_mutex","shared_timed_mutex","shared_ptr","stack","string_view","stringstream","timed_mutex","thread","true_type","tuple","unique_lock","unique_ptr","unordered_map","unordered_multimap","unordered_multiset","unordered_set","variant","vector","weak_ptr","wstring","wstring_view"]},w={className:"function.dispatch",relevance:0,keywords:{_hint:["abort","abs","acos","apply","as_const","asin","atan","atan2","calloc","ceil","cerr","cin","clog","cos","cosh","cout","declval","endl","exchange","exit","exp","fabs","floor","fmod","forward","fprintf","fputs","free","frexp","fscanf","future","invoke","isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","labs","launder","ldexp","log","log10","make_pair","make_shared","make_shared_for_overwrite","make_tuple","make_unique","malloc","memchr","memcmp","memcpy","memset","modf","move","pow","printf","putchar","puts","realloc","scanf","sin","sinh","snprintf","sprintf","sqrt","sscanf","std","stderr","stdin","stdout","strcat","strchr","strcmp","strcpy","strcspn","strlen","strncat","strncmp","strncpy","strpbrk","strrchr","strspn","strstr","swap","tan","tanh","terminate","to_underlying","tolower","toupper","vfprintf","visit","vprintf","vsprintf"]},begin:d.concat(/\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!switch)/,/(?!while)/,z.IDENT_RE,d.lookahead(/(<[^<>]+>|)\s*\(/))},W0=[w,c,o,A,z.C_BLOCK_COMMENT_MODE,i,s],U0={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:U,contains:W0.concat([{begin:/\(/,end:/\)/,keywords:U,contains:W0.concat(["self"]),relevance:0}]),relevance:0},D0={className:"function",begin:"("+n+"[\\*&\\s]+)+"+Z0,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:U,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:"decltype\\(auto\\)",keywords:U,relevance:0},{begin:Z0,returnBegin:!0,contains:[I0],relevance:0},{begin:/::/,relevance:0},{begin:/:/,endsWithParent:!0,contains:[s,i]},{relevance:0,match:/,/},{className:"params",begin:/\(/,end:/\)/,keywords:U,relevance:0,contains:[A,z.C_BLOCK_COMMENT_MODE,s,i,o,{begin:/\(/,end:/\)/,keywords:U,relevance:0,contains:["self",A,z.C_BLOCK_COMMENT_MODE,s,i,o]}]},o,A,z.C_BLOCK_COMMENT_MODE,c]};return{name:"C++",aliases:["cc","c++","h++","hpp","hh","hxx","cxx"],keywords:U,illegal:"</",classNameAliases:{"function.dispatch":"built_in"},contains:[].concat(U0,D0,w,W0,[c,{begin:"\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\s*<(?!<)",end:">",keywords:U,contains:["self",o]},{begin:z.IDENT_RE+"::",keywords:U},{match:[/\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/,/\s+/,/\w+/],className:{1:"keyword",3:"title.class"}}])}}})();$0.registerLanguage("cpp",x)})();/*! `rust` grammar compiled for Highlight.js 11.9.0 */(()=>{var x=(()=>{return(z)=>{const d=z.regex,A={className:"title.function.invoke",relevance:0,begin:d.concat(/\b/,/(?!let|for|while|if|else|match\b)/,z.IDENT_RE,d.lookahead(/\s*\(/))},Y0=["drop ","Copy","Send","Sized","Sync","Drop","Fn","FnMut","FnOnce","ToOwned","Clone","Debug","PartialEq","PartialOrd","Eq","Ord","AsRef","AsMut","Into","From","Default","Iterator","Extend","IntoIterator","DoubleEndedIterator","ExactSizeIterator","SliceConcatExt","ToString","assert!","assert_eq!","bitflags!","bytes!","cfg!","col!","concat!","concat_idents!","debug_assert!","debug_assert_eq!","env!","eprintln!","panic!","file!","format!","format_args!","include_bytes!","include_str!","line!","local_data_key!","module_path!","option_env!","print!","println!","select!","stringify!","try!","unimplemented!","unreachable!","vec!","write!","writeln!","macro_rules!","assert_ne!","debug_assert_ne!"],n=["i8","i16","i32","i64","i128","isize","u8","u16","u32","u64","u128","usize","f32","f64","str","char","bool","Box","Option","Result","String","Vec"];return{name:"Rust",aliases:["rs"],keywords:{$pattern:z.IDENT_RE+"!?",type:n,keyword:["abstract","as","async","await","become","box","break","const","continue","crate","do","dyn","else","enum","extern","false","final","fn","for","if","impl","in","let","loop","macro","match","mod","move","mut","override","priv","pub","ref","return","self","Self","static","struct","super","trait","true","try","type","typeof","unsafe","unsized","use","virtual","where","while","yield"],literal:["true","false","Some","None","Ok","Err"],built_in:Y0},illegal:"</",contains:[z.C_LINE_COMMENT_MODE,z.COMMENT("/\\*","\\*/",{contains:["self"]}),z.inherit(z.QUOTE_STRING_MODE,{begin:/b?"/,illegal:null}),{className:"string",variants:[{begin:/b?r(#*)"(.|\n)*?"\1(?!#)/},{begin:/b?'\\?(x\w{2}|u\w{4}|U\w{8}|.)'/}]},{className:"symbol",begin:/'[a-zA-Z_][a-zA-Z0-9_]*/},{className:"number",variants:[{begin:"\\b0b([01_]+)([ui](8|16|32|64|128|size)|f(32|64))?"},{begin:"\\b0o([0-7_]+)([ui](8|16|32|64|128|size)|f(32|64))?"},{begin:"\\b0x([A-Fa-f0-9_]+)([ui](8|16|32|64|128|size)|f(32|64))?"},{begin:"\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)([ui](8|16|32|64|128|size)|f(32|64))?"}],relevance:0},{begin:[/fn/,/\s+/,z.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.function"}},{className:"meta",begin:"#!?\\[",end:"\\]",contains:[{className:"string",begin:/"/,end:/"/}]},{begin:[/let/,/\s+/,/(?:mut\s+)?/,z.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"keyword",4:"variable"}},{begin:[/for/,/\s+/,z.UNDERSCORE_IDENT_RE,/\s+/,/in/],className:{1:"keyword",3:"variable",5:"keyword"}},{begin:[/type/,/\s+/,z.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.class"}},{begin:[/(?:trait|enum|struct|union|impl|for)/,/\s+/,z.UNDERSCORE_IDENT_RE],className:{1:"keyword",3:"title.class"}},{begin:z.IDENT_RE+"::",keywords:{keyword:"Self",built_in:Y0,type:n}},{className:"punctuation",begin:"->"},A]}}})();$0.registerLanguage("rust",x)})();var l0=()=>{$0.highlightAll(),r1(document.body,{delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1},{left:"\\(",right:"\\)",display:!1},{left:"\\[",right:"\\]",display:!0}]})};addEventListener("DOMContentLoaded",(x)=>{console.debug("Fired: DOMContentLoaded"),l0()});addEventListener("route",(x)=>{console.debug("Fired: route"),l0()});l0()});export default t1();
